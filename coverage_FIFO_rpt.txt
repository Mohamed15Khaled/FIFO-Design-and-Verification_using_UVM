Coverage Report by instance with details

=================================================================================
=== Instance: /FIFO_TOP/FIFO_if
=== Design Unit: work.FIFO_interface
=================================================================================
Toggle Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Toggles                         86        86         0   100.00%

================================Toggle Details================================

Toggle Coverage for instance /FIFO_TOP/FIFO_if --

                                              Node      1H->0L      0L->1H  "Coverage"
                                              ---------------------------------------
                                       almostempty           1           1      100.00 
                                        almostfull           1           1      100.00 
                                               clk           1           1      100.00 
                                     data_in[15-0]           1           1      100.00 
                                    data_out[15-0]           1           1      100.00 
                                             empty           1           1      100.00 
                                              full           1           1      100.00 
                                          overflow           1           1      100.00 
                                             rd_en           1           1      100.00 
                                             rst_n           1           1      100.00 
                                         underflow           1           1      100.00 
                                            wr_ack           1           1      100.00 
                                             wr_en           1           1      100.00 

Total Node Count     =         43 
Toggled Node Count   =         43 
Untoggled Node Count =          0 

Toggle Coverage      =     100.00% (86 of 86 bins)

=================================================================================
=== Instance: /FIFO_TOP/dut/fifo_assertions_block
=== Design Unit: work.fifo_assertions
=================================================================================

Assertion Coverage:
    Assertions                      18        18         0   100.00%
--------------------------------------------------------------------------------------------------------------------------------
Name                 File(Line)                   Failure      Pass     Vacuous    Disable    Attempt     Active Peak Active ATV
                                                  Count        Count    Count      Count      Count       Count  Count          
--------------------------------------------------------------------------------------------------------------------------------
/FIFO_TOP/dut/fifo_assertions_block/FULL
                     fifo_assertions.sv(7)              0          1          0          0          1          0           - off
/FIFO_TOP/dut/fifo_assertions_block/NOT_FULL
                     fifo_assertions.sv(9)              0          1          0          0          1          0           - off
/FIFO_TOP/dut/fifo_assertions_block/ALMOSTFULL
                     fifo_assertions.sv(13)             0          1          0          0          1          0           - off
/FIFO_TOP/dut/fifo_assertions_block/NOT_ALMOSTFULL
                     fifo_assertions.sv(15)             0          1          0          0          1          0           - off
/FIFO_TOP/dut/fifo_assertions_block/EMPTY
                     fifo_assertions.sv(19)             0          1          0          0          1          0           - off
/FIFO_TOP/dut/fifo_assertions_block/NOT_EMPTY
                     fifo_assertions.sv(21)             0          1          0          0          1          0           - off
/FIFO_TOP/dut/fifo_assertions_block/ALMOSTEMPTY
                     fifo_assertions.sv(25)             0          1          0          0          1          0           - off
/FIFO_TOP/dut/fifo_assertions_block/NOT_ALMOSTEMPTY
                     fifo_assertions.sv(27)             0          1          0          0          1          0           - off
/FIFO_TOP/dut/fifo_assertions_block/assert_reset
                     fifo_assertions.sv(32)             0          1          0          0          1          0           - off
/FIFO_TOP/dut/fifo_assertions_block/Write_pointer
                     fifo_assertions.sv(108)            0        692        889         19       1601          1           - off
/FIFO_TOP/dut/fifo_assertions_block/Read_pointer
                     fifo_assertions.sv(109)            0        623        959         19       1601          0           - off
/FIFO_TOP/dut/fifo_assertions_block/Counter_up
                     fifo_assertions.sv(110)            0        417       1166         17       1601          1           - off
/FIFO_TOP/dut/fifo_assertions_block/Counter_down
                     fifo_assertions.sv(111)            0        348       1236         17       1601          0           - off
/FIFO_TOP/dut/fifo_assertions_block/Write_acknowledge
                     fifo_assertions.sv(112)            0        692        889         19       1601          1           - off
/FIFO_TOP/dut/fifo_assertions_block/High_overflow
                     fifo_assertions.sv(113)            0        140       1442         19       1601          0           - off
/FIFO_TOP/dut/fifo_assertions_block/Low_overflow
                     fifo_assertions.sv(114)            0       1431        144         25       1601          1           - off
/FIFO_TOP/dut/fifo_assertions_block/High_underflow
                     fifo_assertions.sv(115)            0        109       1476         16       1601          0           - off
/FIFO_TOP/dut/fifo_assertions_block/Low_underflow
                     fifo_assertions.sv(116)            0       1462        110         28       1601          1           - off
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                        10        10         0   100.00%

================================Branch Details================================

Branch Coverage for instance /FIFO_TOP/dut/fifo_assertions_block

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File fifo_assertions.sv
------------------------------------IF Branch------------------------------------
    6                                       1367     Count coming in to IF
    6               1                        182         if(dut.count == FIFO_if.FIFO_DEPTH) 
    8               1                       1185         else 
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    12                                      1367     Count coming in to IF
    12              1                        133         if(dut.count == FIFO_if.FIFO_DEPTH - 1) 
    14              1                       1234         else 
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    18                                      1367     Count coming in to IF
    18              1                        220         if(dut.count == 0) 
    20              1                       1147         else 
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    24                                      1367     Count coming in to IF
    24              1                        360         if(dut.count == 1) 
    26              1                       1007         else 
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    30                                      1367     Count coming in to IF
    30              1                         30         if (!FIFO_if.rst_n) begin
                                            1337     All False Count
Branch totals: 2 hits of 2 branches = 100.00%


Condition Coverage:
    Enabled Coverage              Bins   Covered    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Conditions                       4         4         0   100.00%

================================Condition Details================================

Condition Coverage for instance /FIFO_TOP/dut/fifo_assertions_block --

  File fifo_assertions.sv
----------------Focused Condition View-------------------
Line       6 Item    1  (dut.count == FIFO_if.FIFO_DEPTH)
Condition totals: 1 of 1 input term covered = 100.00%

                         Input Term   Covered  Reason for no coverage   Hint
                        -----------  --------  -----------------------  --------------
  (dut.count == FIFO_if.FIFO_DEPTH)         Y

     Rows:       Hits  FEC Target                           Non-masking condition(s)      
 ---------  ---------  --------------------                 -------------------------     
  Row   1:          1  (dut.count == FIFO_if.FIFO_DEPTH)_0  -                             
  Row   2:          1  (dut.count == FIFO_if.FIFO_DEPTH)_1  -                             

----------------Focused Condition View-------------------
Line       12 Item    1  (dut.count == (FIFO_if.FIFO_DEPTH - 1))
Condition totals: 1 of 1 input term covered = 100.00%

                               Input Term   Covered  Reason for no coverage   Hint
                              -----------  --------  -----------------------  --------------
  (dut.count == (FIFO_if.FIFO_DEPTH - 1))         Y

     Rows:       Hits  FEC Target                                 Non-masking condition(s)      
 ---------  ---------  --------------------                       -------------------------     
  Row   1:          1  (dut.count == (FIFO_if.FIFO_DEPTH - 1))_0  -                             
  Row   2:          1  (dut.count == (FIFO_if.FIFO_DEPTH - 1))_1  -                             

----------------Focused Condition View-------------------
Line       18 Item    1  (dut.count == 0)
Condition totals: 1 of 1 input term covered = 100.00%

        Input Term   Covered  Reason for no coverage   Hint
       -----------  --------  -----------------------  --------------
  (dut.count == 0)         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  (dut.count == 0)_0    -                             
  Row   2:          1  (dut.count == 0)_1    -                             

----------------Focused Condition View-------------------
Line       24 Item    1  (dut.count == 1)
Condition totals: 1 of 1 input term covered = 100.00%

        Input Term   Covered  Reason for no coverage   Hint
       -----------  --------  -----------------------  --------------
  (dut.count == 1)         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  (dut.count == 1)_0    -                             
  Row   2:          1  (dut.count == 1)_1    -                             



Directive Coverage:
    Directives                       9         9         0   100.00%

DIRECTIVE COVERAGE:
--------------------------------------------------------------------------------------------
Name                                     Design Design   Lang File(Line)      Hits Status    
                                         Unit   UnitType                                     
--------------------------------------------------------------------------------------------
/FIFO_TOP/dut/fifo_assertions_block/Write_pointer_cover 
                                         fifo_assertions Verilog  SVA  fifo_assertions.sv(119)
                                                                               692 Covered   
/FIFO_TOP/dut/fifo_assertions_block/Read_pointer_cover 
                                         fifo_assertions Verilog  SVA  fifo_assertions.sv(120)
                                                                               623 Covered   
/FIFO_TOP/dut/fifo_assertions_block/Counter_up_cover 
                                         fifo_assertions Verilog  SVA  fifo_assertions.sv(121)
                                                                               417 Covered   
/FIFO_TOP/dut/fifo_assertions_block/Counter_down_cover 
                                         fifo_assertions Verilog  SVA  fifo_assertions.sv(122)
                                                                               348 Covered   
/FIFO_TOP/dut/fifo_assertions_block/Write_acknowledge_cover 
                                         fifo_assertions Verilog  SVA  fifo_assertions.sv(123)
                                                                               692 Covered   
/FIFO_TOP/dut/fifo_assertions_block/High_overflow_cover 
                                         fifo_assertions Verilog  SVA  fifo_assertions.sv(124)
                                                                               140 Covered   
/FIFO_TOP/dut/fifo_assertions_block/Low_overflow_cover 
                                         fifo_assertions Verilog  SVA  fifo_assertions.sv(125)
                                                                              1431 Covered   
/FIFO_TOP/dut/fifo_assertions_block/High_underflow_cover 
                                         fifo_assertions Verilog  SVA  fifo_assertions.sv(126)
                                                                               109 Covered   
/FIFO_TOP/dut/fifo_assertions_block/Low_underflow_cover 
                                         fifo_assertions Verilog  SVA  fifo_assertions.sv(127)
                                                                              1462 Covered   
Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                       1         1         0   100.00%

================================Statement Details================================

Statement Coverage for instance /FIFO_TOP/dut/fifo_assertions_block --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File fifo_assertions.sv
    1                                                module fifo_assertions (FIFO_interface.DUT FIFO_if);
    2                                                
    3                                                  // Assertion checks based on the FIFO count
    4               1                       1367       always_comb begin


=================================================================================
=== Instance: /FIFO_TOP/dut
=== Design Unit: work.FIFO
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                        23        23         0   100.00%

================================Branch Details================================

Branch Coverage for instance /FIFO_TOP/dut

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File FIFO.sv
------------------------------------IF Branch------------------------------------
    16                                      1615     Count coming in to IF
    16              1                         29             if (!FIFO_if.rst_n) begin
    21              1                        697             else if (FIFO_if.wr_en && count < FIFO_if.FIFO_DEPTH) begin 
    27              1                        889             else begin 
Branch totals: 3 hits of 3 branches = 100.00%

------------------------------------IF Branch------------------------------------
    30                                       889     Count coming in to IF
    30              1                        144                 if (FIFO_if.full && FIFO_if.wr_en && !FIFO_if.rd_en)  
    32              1                        745                 else
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    39                                      1615     Count coming in to IF
    39              1                         29             if (!FIFO_if.rst_n) begin
    43              1                        627             else if (FIFO_if.rd_en && count != 0) begin
    48              1                        959             else begin
Branch totals: 3 hits of 3 branches = 100.00%

------------------------------------IF Branch------------------------------------
    50                                       959     Count coming in to IF
    50              1                        110                 if (FIFO_if.empty && !FIFO_if.wr_en && FIFO_if.rd_en) 
    52              1                        849                 else
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    59                                      1339     Count coming in to IF
    59              1                         29             if (!FIFO_if.rst_n) begin
    62              1                       1310             else begin 
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    64                                      1310     Count coming in to IF
    64              1                        420                 if  ((({FIFO_if.wr_en, FIFO_if.rd_en} == 2'b10) && !FIFO_if.full) || 
    68              1                        350                 else if ((({FIFO_if.wr_en, FIFO_if.rd_en} == 2'b01) && !FIFO_if.empty) || 
                                             540     All False Count
Branch totals: 3 hits of 3 branches = 100.00%

------------------------------------IF Branch------------------------------------
    75                                       783     Count coming in to IF
    75              1                         77         assign FIFO_if.full = (count == FIFO_if.FIFO_DEPTH) ? 1 : 0;  
    75              2                        706         assign FIFO_if.full = (count == FIFO_if.FIFO_DEPTH) ? 1 : 0;  
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    76                                       783     Count coming in to IF
    76              1                        135         assign FIFO_if.empty = (count == 0) ? 1 : 0;
    76              2                        648         assign FIFO_if.empty = (count == 0) ? 1 : 0;
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    77                                       783     Count coming in to IF
    77              1                         92         assign FIFO_if.almostfull = (count == FIFO_if.FIFO_DEPTH-1) ? 1 : 0; // Almost full condition
    77              2                        691         assign FIFO_if.almostfull = (count == FIFO_if.FIFO_DEPTH-1) ? 1 : 0; // Almost full condition
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    78                                       783     Count coming in to IF
    78              1                        194         assign FIFO_if.almostempty = (count == 1) ? 1 : 0; // Almost empty condition
    78              2                        589         assign FIFO_if.almostempty = (count == 1) ? 1 : 0; // Almost empty condition
Branch totals: 2 hits of 2 branches = 100.00%


Condition Coverage:
    Enabled Coverage              Bins   Covered    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Conditions                      22        22         0   100.00%

================================Condition Details================================

Condition Coverage for instance /FIFO_TOP/dut --

  File FIFO.sv
----------------Focused Condition View-------------------
Line       21 Item    1  (FIFO_if.wr_en && (count < FIFO_if.FIFO_DEPTH))
Condition totals: 2 of 2 input terms covered = 100.00%

                    Input Term   Covered  Reason for no coverage   Hint
                   -----------  --------  -----------------------  --------------
                 FIFO_if.wr_en         Y
  (count < FIFO_if.FIFO_DEPTH)         Y

     Rows:       Hits  FEC Target                      Non-masking condition(s)      
 ---------  ---------  --------------------            -------------------------     
  Row   1:          1  FIFO_if.wr_en_0                 -                             
  Row   2:          1  FIFO_if.wr_en_1                 (count < FIFO_if.FIFO_DEPTH)  
  Row   3:          1  (count < FIFO_if.FIFO_DEPTH)_0  FIFO_if.wr_en                 
  Row   4:          1  (count < FIFO_if.FIFO_DEPTH)_1  FIFO_if.wr_en                 

----------------Focused Condition View-------------------
Line       30 Item    1  ((FIFO_if.full && FIFO_if.wr_en) && ~FIFO_if.rd_en)
Condition totals: 3 of 3 input terms covered = 100.00%

     Input Term   Covered  Reason for no coverage   Hint
    -----------  --------  -----------------------  --------------
   FIFO_if.full         Y
  FIFO_if.wr_en         Y
  FIFO_if.rd_en         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  FIFO_if.full_0        -                             
  Row   2:          1  FIFO_if.full_1        (~FIFO_if.rd_en && FIFO_if.wr_en)
  Row   3:          1  FIFO_if.wr_en_0       FIFO_if.full                  
  Row   4:          1  FIFO_if.wr_en_1       (~FIFO_if.rd_en && FIFO_if.full)
  Row   5:          1  FIFO_if.rd_en_0       (FIFO_if.full && FIFO_if.wr_en)
  Row   6:          1  FIFO_if.rd_en_1       (FIFO_if.full && FIFO_if.wr_en)

----------------Focused Condition View-------------------
Line       43 Item    1  (FIFO_if.rd_en && (count != 0))
Condition totals: 2 of 2 input terms covered = 100.00%

     Input Term   Covered  Reason for no coverage   Hint
    -----------  --------  -----------------------  --------------
  FIFO_if.rd_en         Y
   (count != 0)         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  FIFO_if.rd_en_0       -                             
  Row   2:          1  FIFO_if.rd_en_1       (count != 0)                  
  Row   3:          1  (count != 0)_0        FIFO_if.rd_en                 
  Row   4:          1  (count != 0)_1        FIFO_if.rd_en                 

----------------Focused Condition View-------------------
Line       50 Item    1  ((FIFO_if.empty && ~FIFO_if.wr_en) && FIFO_if.rd_en)
Condition totals: 3 of 3 input terms covered = 100.00%

     Input Term   Covered  Reason for no coverage   Hint
    -----------  --------  -----------------------  --------------
  FIFO_if.empty         Y
  FIFO_if.wr_en         Y
  FIFO_if.rd_en         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  FIFO_if.empty_0       -                             
  Row   2:          1  FIFO_if.empty_1       (FIFO_if.rd_en && ~FIFO_if.wr_en)
  Row   3:          1  FIFO_if.wr_en_0       (FIFO_if.rd_en && FIFO_if.empty)
  Row   4:          1  FIFO_if.wr_en_1       FIFO_if.empty                 
  Row   5:          1  FIFO_if.rd_en_0       (FIFO_if.empty && ~FIFO_if.wr_en)
  Row   6:          1  FIFO_if.rd_en_1       (FIFO_if.empty && ~FIFO_if.wr_en)

-----------Focused Condition View (Bimodal)--------------
Line       64 Item    1  (((~FIFO_if.rd_en && FIFO_if.wr_en) && ~FIFO_if.full) || ((FIFO_if.empty && FIFO_if.rd_en) && FIFO_if.wr_en))
Condition totals: 4 of 4 input terms covered = 100.00%

       Input Term   Covered  Reason for no coverage                  Hint
      -----------  --------  --------------------------------------  --------------
    FIFO_if.rd_en         Y
    FIFO_if.wr_en         Y
     FIFO_if.full         Y
    FIFO_if.empty         Y

    Rows:   Hits(->0)   Hits(->1)  FEC Target            Non-masking condition(s)                                                                                                      

---------  ----------  ----------  --------------------  -------------------------                                                                                                     
 Row   1:           0           1  FIFO_if.rd_en_0       (~FIFO_if.full && FIFO_if.wr_en), (~((~FIFO_if.rd_en && FIFO_if.wr_en) && ~FIFO_if.full) && FIFO_if.empty)                    
 Row   2:           1           0  FIFO_if.rd_en_1       ~((FIFO_if.empty && FIFO_if.rd_en) && FIFO_if.wr_en), (FIFO_if.wr_en && FIFO_if.empty)                                        
 Row   3:           1           0  FIFO_if.wr_en_0       ~FIFO_if.rd_en, (FIFO_if.empty && FIFO_if.rd_en)                                                                              
 Row   4:           0           1  FIFO_if.wr_en_1       (~FIFO_if.full && ~FIFO_if.rd_en), (~((~FIFO_if.rd_en && FIFO_if.wr_en) && ~FIFO_if.full) && (FIFO_if.empty && FIFO_if.rd_en))
 Row   5:           0           1  FIFO_if.full_0        (~FIFO_if.rd_en && FIFO_if.wr_en)                                                                                             
 Row   6:           1           0  FIFO_if.full_1        (~((FIFO_if.empty && FIFO_if.rd_en) && FIFO_if.wr_en) && (~FIFO_if.rd_en && FIFO_if.wr_en))                                   
 Row   7:           1           0  FIFO_if.empty_0       ~((~FIFO_if.rd_en && FIFO_if.wr_en) && ~FIFO_if.full)                                                                         
 Row   8:           0           1  FIFO_if.empty_1       (FIFO_if.wr_en && FIFO_if.rd_en)                                                                                              

-----------Focused Condition View (Bimodal)--------------
Line       68 Item    1  (((FIFO_if.rd_en && ~FIFO_if.wr_en) && ~FIFO_if.empty) || ((FIFO_if.full && FIFO_if.rd_en) && FIFO_if.wr_en))
Condition totals: 4 of 4 input terms covered = 100.00%

       Input Term   Covered  Reason for no coverage                  Hint
      -----------  --------  --------------------------------------  --------------
    FIFO_if.rd_en         Y
    FIFO_if.wr_en         Y
    FIFO_if.empty         Y
     FIFO_if.full         Y

    Rows:   Hits(->0)   Hits(->1)  FEC Target            Non-masking condition(s)                                                                                                      

---------  ----------  ----------  --------------------  -------------------------                                                                                                     
 Row   1:           1           0  FIFO_if.rd_en_0       FIFO_if.full                                                                                                                  
 Row   2:           0           1  FIFO_if.rd_en_1       (~FIFO_if.empty && ~FIFO_if.wr_en), (FIFO_if.wr_en && FIFO_if.full)                                                           
 Row   3:           0           1  FIFO_if.wr_en_0       (~FIFO_if.empty && FIFO_if.rd_en), (~((FIFO_if.rd_en && ~FIFO_if.wr_en) && ~FIFO_if.empty) && (FIFO_if.full && FIFO_if.rd_en))
 Row   4:           1           0  FIFO_if.wr_en_1       (~((FIFO_if.full && FIFO_if.rd_en) && FIFO_if.wr_en) && FIFO_if.rd_en), (FIFO_if.full && FIFO_if.rd_en)                       
 Row   5:           0           1  FIFO_if.empty_0       (FIFO_if.rd_en && ~FIFO_if.wr_en)                                                                                             
 Row   6:           1           0  FIFO_if.empty_1       (~((FIFO_if.full && FIFO_if.rd_en) && FIFO_if.wr_en) && (FIFO_if.rd_en && ~FIFO_if.wr_en))                                    
 Row   7:           1           0  FIFO_if.full_0        ~((FIFO_if.rd_en && ~FIFO_if.wr_en) && ~FIFO_if.empty)                                                                        
 Row   8:           0           1  FIFO_if.full_1        (FIFO_if.wr_en && FIFO_if.rd_en)                                                                                              

----------------Focused Condition View-------------------
Line       75 Item    1  (count == FIFO_if.FIFO_DEPTH)
Condition totals: 1 of 1 input term covered = 100.00%

                     Input Term   Covered  Reason for no coverage   Hint
                    -----------  --------  -----------------------  --------------
  (count == FIFO_if.FIFO_DEPTH)         Y

     Rows:       Hits  FEC Target                       Non-masking condition(s)      
 ---------  ---------  --------------------             -------------------------     
  Row   1:          1  (count == FIFO_if.FIFO_DEPTH)_0  -                             
  Row   2:          1  (count == FIFO_if.FIFO_DEPTH)_1  -                             

----------------Focused Condition View-------------------
Line       76 Item    1  (count == 0)
Condition totals: 1 of 1 input term covered = 100.00%

    Input Term   Covered  Reason for no coverage   Hint
   -----------  --------  -----------------------  --------------
  (count == 0)         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  (count == 0)_0        -                             
  Row   2:          1  (count == 0)_1        -                             

----------------Focused Condition View-------------------
Line       77 Item    1  (count == (FIFO_if.FIFO_DEPTH - 1))
Condition totals: 1 of 1 input term covered = 100.00%

                           Input Term   Covered  Reason for no coverage   Hint
                          -----------  --------  -----------------------  --------------
  (count == (FIFO_if.FIFO_DEPTH - 1))         Y

     Rows:       Hits  FEC Target                             Non-masking condition(s)      
 ---------  ---------  --------------------                   -------------------------     
  Row   1:          1  (count == (FIFO_if.FIFO_DEPTH - 1))_0  -                             
  Row   2:          1  (count == (FIFO_if.FIFO_DEPTH - 1))_1  -                             

----------------Focused Condition View-------------------
Line       78 Item    1  (count == 1)
Condition totals: 1 of 1 input term covered = 100.00%

    Input Term   Covered  Reason for no coverage   Hint
   -----------  --------  -----------------------  --------------
  (count == 1)         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  (count == 1)_0        -                             
  Row   2:          1  (count == 1)_1        -                             


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      25        25         0   100.00%

================================Statement Details================================

Statement Coverage for instance /FIFO_TOP/dut --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File FIFO.sv
    1                                                module FIFO(FIFO_interface.DUT FIFO_if);
    2                                                
    3                                                    // Calculate the maximum address size for the FIFO based on its depth
    4                                                    localparam max_fifo_addr = $clog2(FIFO_if.FIFO_DEPTH);
    5                                                    
    6                                                    // Memory array to store FIFO data
    7                                                    reg [FIFO_if.FIFO_WIDTH-1:0] mem [FIFO_if.FIFO_DEPTH-1:0];
    8                                                    
    9                                                    // Write and Read pointers
    10                                                   reg [max_fifo_addr-1:0] wr_ptr, rd_ptr; 
    11                                                   // Count of elements in the FIFO
    12                                                   reg [max_fifo_addr:0] count; 
    13                                               
    14                                                   // Write Operation
    15              1                       1615         always @(posedge FIFO_if.clk or negedge FIFO_if.rst_n) begin
    16                                                       if (!FIFO_if.rst_n) begin
    17              1                         29                 wr_ptr <= 0; 
    18              1                         29                 FIFO_if.overflow <= 0; // Reset overflow condition 
    19              1                         29                 FIFO_if.wr_ack <= 0; // Reset write acknowledgment 
    20                                                       end
    21                                                       else if (FIFO_if.wr_en && count < FIFO_if.FIFO_DEPTH) begin 
    22                                                           // Write data to memory and acknowledge
    23              1                        697                 mem[wr_ptr] <= FIFO_if.data_in;
    24              1                        697                 FIFO_if.wr_ack <= 1;
    25              1                        697                 wr_ptr <= wr_ptr + 1; // Increment write pointer
    26                                                       end
    27                                                       else begin 
    28              1                        889                 FIFO_if.wr_ack <= 0; 
    29                                                           // Check for overflow condition when trying to write into a full FIFO
    30                                                           if (FIFO_if.full && FIFO_if.wr_en && !FIFO_if.rd_en)  
    31              1                        144                     FIFO_if.overflow <= 1;
    32                                                           else
    33              1                        745                     FIFO_if.overflow <= 0; // Reset overflow if not full
    34                                                       end
    35                                                   end
    36                                               
    37                                                   // Read Operation
    38              1                       1615         always @(posedge FIFO_if.clk or negedge FIFO_if.rst_n) begin
    39                                                       if (!FIFO_if.rst_n) begin
    40              1                         29                 rd_ptr <= 0; 
    41              1                         29                 FIFO_if.underflow <= 0; // Reset underflow condition
    42                                                       end
    43                                                       else if (FIFO_if.rd_en && count != 0) begin
    44                                                           // Read data from memory
    45              1                        627                 FIFO_if.data_out <= mem[rd_ptr];
    46              1                        627                 rd_ptr <= rd_ptr + 1; // Increment read pointer
    47                                                       end
    48                                                       else begin
    49                                                           // Check for underflow condition when trying to read from an empty FIFO
    50                                                           if (FIFO_if.empty && !FIFO_if.wr_en && FIFO_if.rd_en) 
    51              1                        110                     FIFO_if.underflow <= 1;
    52                                                           else
    53              1                        849                     FIFO_if.underflow <= 0; // Reset underflow if not empty
    54                                                       end
    55                                                   end
    56                                               
    57                                                   // Count Logic
    58              1                       1339         always @(posedge FIFO_if.clk or negedge FIFO_if.rst_n) begin
    59                                                       if (!FIFO_if.rst_n) begin
    60              1                         29                 count <= 0; // Initialize count on reset
    61                                                       end
    62                                                       else begin 
    63                                                           // Update count based on read/write enable signals and FIFO status
    64                                                           if  ((({FIFO_if.wr_en, FIFO_if.rd_en} == 2'b10) && !FIFO_if.full) || 
    65                                                                 (FIFO_if.empty && ({FIFO_if.wr_en, FIFO_if.rd_en} == 2'b11))) 
    66              1                        420                     count <= count + 1; // Increment count for write
    67                                                           
    68                                                           else if ((({FIFO_if.wr_en, FIFO_if.rd_en} == 2'b01) && !FIFO_if.empty) || 
    69                                                                    (FIFO_if.full && ({FIFO_if.wr_en, FIFO_if.rd_en} == 2'b11)))
    70              1                        350                     count <= count - 1; // Decrement count for read
    71                                                       end
    72                                                   end
    73                                               
    74                                                   // Status Signals
    75              1                        784         assign FIFO_if.full = (count == FIFO_if.FIFO_DEPTH) ? 1 : 0;  
    76              1                        784         assign FIFO_if.empty = (count == 0) ? 1 : 0;
    77              1                        784         assign FIFO_if.almostfull = (count == FIFO_if.FIFO_DEPTH-1) ? 1 : 0; // Almost full condition
    78              1                        784         assign FIFO_if.almostempty = (count == 1) ? 1 : 0; // Almost empty condition

Toggle Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Toggles                         20        20         0   100.00%

================================Toggle Details================================

Toggle Coverage for instance /FIFO_TOP/dut --

                                              Node      1H->0L      0L->1H  "Coverage"
                                              ---------------------------------------
                                        count[3-0]           1           1      100.00 
                                       rd_ptr[2-0]           1           1      100.00 
                                       wr_ptr[2-0]           1           1      100.00 

Total Node Count     =         10 
Toggled Node Count   =         10 
Untoggled Node Count =          0 

Toggle Coverage      =     100.00% (20 of 20 bins)

=================================================================================
=== Instance: /FIFO_TOP
=== Design Unit: work.FIFO_TOP
=================================================================================
Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                       6         6         0   100.00%

================================Statement Details================================

Statement Coverage for instance /FIFO_TOP --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File FIFO_TOP.sv
    4                                                module FIFO_TOP ();
    5                                                
    6                                                bit clk ; 
    7                                                initial begin
    8               1                          1         clk = 1 ;
    9               1                          1         forever begin
    10              1                       3202             #1 clk =~clk ;
    10              2                       3201     
    11                                                   end
    12                                               end
    13                                               FIFO_interface FIFO_if (clk);
    14                                               FIFO dut (FIFO_if) ;
    15                                               bind FIFO fifo_assertions fifo_assertions_block (FIFO_if) ;
    16                                               initial begin
    17              1                          1         uvm_config_db # (virtual FIFO_interface ) :: set (null , "uvm_test_top", "FIFO" , FIFO_if );
    18              1                          1         run_test("fifo_test") ; 

Toggle Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Toggles                          2         2         0   100.00%

================================Toggle Details================================

Toggle Coverage for instance /FIFO_TOP --

                                              Node      1H->0L      0L->1H  "Coverage"
                                              ---------------------------------------
                                               clk           1           1      100.00 

Total Node Count     =          1 
Toggled Node Count   =          1 
Untoggled Node Count =          0 

Toggle Coverage      =     100.00% (2 of 2 bins)

=================================================================================
=== Instance: /fifo_seq_item_pkg
=== Design Unit: work.fifo_seq_item_pkg
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                        10         2         8    20.00%

================================Branch Details================================

Branch Coverage for instance /fifo_seq_item_pkg

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File fifo_seq_item_pkg.sv
------------------------------------IF Branch------------------------------------
    7                                    ***0***     Count coming in to IF
    7               1                    ***0***     `uvm_object_utils (fifo_seq_item)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    7                                       1601     Count coming in to IF
    7               2                    ***0***     `uvm_object_utils (fifo_seq_item)
                                            1601     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    7                                    ***0***     Count coming in to IF
    7               3                    ***0***     `uvm_object_utils (fifo_seq_item)
    7               4                    ***0***     `uvm_object_utils (fifo_seq_item)
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    7                                       1601     Count coming in to IF
    7               5                    ***0***     `uvm_object_utils (fifo_seq_item)
                                            1601     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    7                                    ***0***     Count coming in to IF
    7               6                    ***0***     `uvm_object_utils (fifo_seq_item)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%


Condition Coverage:
    Enabled Coverage              Bins   Covered    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Conditions                       2         0         2     0.00%

================================Condition Details================================

Condition Coverage for instance /fifo_seq_item_pkg --

  File fifo_seq_item_pkg.sv
----------------Focused Condition View-------------------
Line       7 Item    1  (name != 0)
Condition totals: 0 of 1 input term covered = 0.00%

   Input Term   Covered  Reason for no coverage   Hint
  -----------  --------  -----------------------  --------------
  (name != 0)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:    ***0***  (name != 0)_0         -                             
  Row   2:    ***0***  (name != 0)_1         -                             

----------------Focused Condition View-------------------
Line       7 Item    2  (tmp_data__ != null)
Condition totals: 0 of 1 input term covered = 0.00%

            Input Term   Covered  Reason for no coverage   Hint
           -----------  --------  -----------------------  --------------
  (tmp_data__ != null)         N  '_1' not hit             Hit '_1'

     Rows:       Hits  FEC Target              Non-masking condition(s)      
 ---------  ---------  --------------------    -------------------------     
  Row   1:          1  (tmp_data__ != null)_0  -                             
  Row   2:    ***0***  (tmp_data__ != null)_1  -                             


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      15         5        10    33.33%

================================Statement Details================================

Statement Coverage for instance /fifo_seq_item_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File fifo_seq_item_pkg.sv
    1                                                package fifo_seq_item_pkg ;
    2                                                import uvm_pkg::*;
    3                                                `include "uvm_macros.svh"
    4                                                parameter FIFO_WIDTH = 16;
    5                                                parameter FIFO_DEPTH = 8;
    6                                                class fifo_seq_item extends uvm_sequence_item ;
    7               1                    ***0***     `uvm_object_utils (fifo_seq_item)
    7               2                    ***0***     
    7               3                    ***0***     
    7               4                    ***0***     
    7               5                    ***0***     
    7               6                       1601     
    7               7                    ***0***     
    7               8                    ***0***     
    7               9                       1601     
    7              10                    ***0***     
    8                                                // declare variables 
    9               1                       4805     int RD_EN_ON_DIST = 30 ;
    10              1                       4805     int WR_EN_ON_DIST = 70 ;
    11                                               rand logic [FIFO_WIDTH-1:0] data_in;
    12                                               rand logic rst_n, wr_en, rd_en;
    13                                               logic [FIFO_WIDTH-1:0] data_out;
    14                                               logic wr_ack, overflow;
    15                                               logic full, empty, almostfull, almostempty, underflow;
    16                                               function new(string name = "fifo_seq_item");
    17              1                       4805         super.new(name);  
    18                                               endfunction // new
    19                                               //  ------------constraint_randamization----------------------
    20                                               constraint reset {
    21                                                   rst_n dist {1:/99 , 0:/1} ; // active low reset most of the time 
    22                                               } 
    23                                               constraint Write_en {
    24                                                   wr_en dist {1:/WR_EN_ON_DIST , 0:/ (100-WR_EN_ON_DIST) };
    25                                               }  
    26                                               constraint Read_en {
    27                                                   rd_en dist {1:/RD_EN_ON_DIST , 0:/(100-RD_EN_ON_DIST)};
    28                                               }
    29                                               
    30                                               function string convert2string();
    31              1                    ***0***             return $sformatf ("%s reset =%0b , wr_en = %0b , rd_en = %0b , data_in = 0d%0d, data_out = 0d%0d  ",
    32                                                        super.convert2string(), rst_n,wr_en, rd_en , data_in , data_out ) ;    
    33                                                   endfunction
    34                                               
    35                                                   function string convert2string_stimulus();
    36              1                    ***0***             return $sformatf (" reset =%0b , wr_en = %0b , rd_en = %0b , data_in = 0d%0d, data_out = 0d%0d  ",


=================================================================================
=== Instance: /fifo_write_read_seq_pkg
=== Design Unit: work.fifo_write_read_seq_pkg
=================================================================================

Assertion Coverage:
    Assertions                       3         3         0   100.00%
--------------------------------------------------------------------------------------------------------------------------------
Name                 File(Line)                   Failure      Pass     Vacuous    Disable    Attempt     Active Peak Active ATV
                                                  Count        Count    Count      Count      Count       Count  Count          
--------------------------------------------------------------------------------------------------------------------------------
/fifo_write_read_seq_pkg/fifo_write_read_seq/body/#ublk#164226423#18/immed__23
                     fifo_write_read_seq_pkg.sv(23)
                                                        0        500          0          0        500          0           - off
/fifo_write_read_seq_pkg/fifo_write_read_seq/body/#ublk#164226423#29/immed__34
                     fifo_write_read_seq_pkg.sv(34)
                                                        0        500          0          0        500          0           - off
/fifo_write_read_seq_pkg/fifo_write_read_seq/body/#ublk#164226423#40/immed__45
                     fifo_write_read_seq_pkg.sv(45)
                                                        0        500          0          0        500          0           - off
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                        10         2         8    20.00%

================================Branch Details================================

Branch Coverage for instance /fifo_write_read_seq_pkg

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File fifo_write_read_seq_pkg.sv
------------------------------------IF Branch------------------------------------
    6                                    ***0***     Count coming in to IF
    6               1                    ***0***         `uvm_object_utils(fifo_write_read_seq)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    6                                          1     Count coming in to IF
    6               2                    ***0***         `uvm_object_utils(fifo_write_read_seq)
                                               1     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    6                                    ***0***     Count coming in to IF
    6               3                    ***0***         `uvm_object_utils(fifo_write_read_seq)
    6               4                    ***0***         `uvm_object_utils(fifo_write_read_seq)
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    6                                          1     Count coming in to IF
    6               5                    ***0***         `uvm_object_utils(fifo_write_read_seq)
                                               1     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    6                                    ***0***     Count coming in to IF
    6               6                    ***0***         `uvm_object_utils(fifo_write_read_seq)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%


Condition Coverage:
    Enabled Coverage              Bins   Covered    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Conditions                       2         0         2     0.00%

================================Condition Details================================

Condition Coverage for instance /fifo_write_read_seq_pkg --

  File fifo_write_read_seq_pkg.sv
----------------Focused Condition View-------------------
Line       6 Item    1  (name != 0)
Condition totals: 0 of 1 input term covered = 0.00%

   Input Term   Covered  Reason for no coverage   Hint
  -----------  --------  -----------------------  --------------
  (name != 0)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:    ***0***  (name != 0)_0         -                             
  Row   2:    ***0***  (name != 0)_1         -                             

----------------Focused Condition View-------------------
Line       6 Item    2  (tmp_data__ != null)
Condition totals: 0 of 1 input term covered = 0.00%

            Input Term   Covered  Reason for no coverage   Hint
           -----------  --------  -----------------------  --------------
  (tmp_data__ != null)         N  '_1' not hit             Hit '_1'

     Rows:       Hits  FEC Target              Non-masking condition(s)      
 ---------  ---------  --------------------    -------------------------     
  Row   1:          1  (tmp_data__ != null)_0  -                             
  Row   2:    ***0***  (tmp_data__ != null)_1  -                             


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      35        27         8    77.14%

================================Statement Details================================

Statement Coverage for instance /fifo_write_read_seq_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File fifo_write_read_seq_pkg.sv
    1                                                package fifo_write_read_seq_pkg ;
    2                                                    import fifo_seq_item_pkg::*;
    3                                                    import uvm_pkg::*;
    4                                                    `include "uvm_macros.svh" 
    5                                                    class fifo_write_read_seq extends uvm_sequence #(fifo_seq_item);
    6               1                    ***0***         `uvm_object_utils(fifo_write_read_seq)
    6               2                    ***0***     
    6               3                    ***0***     
    6               4                    ***0***     
    6               5                    ***0***     
    6               6                          1     
    6               7                    ***0***     
    6               8                    ***0***     
    6               9                          1     
    6              10                    ***0***     
    7                                                    fifo_seq_item seq_item ;
    8                                                    int read_dist  ;
    9                                                    int write_dist ;
    10                                               
    11                                                       function new(string name = "fifo_write_read_seq" );
    12              1                          1                 super.new(name) ;
    13                                                       endfunction //new()
    14                                               
    15                                                       task body ;
    16                                                       // Randomize transactions with mostly writes
    17              1                          1             read_dist = 30 ; write_dist = 70 ;
    17              2                          1     
    18              1                        500                 repeat (500) begin
    19              1                        500                     seq_item = fifo_seq_item :: type_id :: create("seq_item");
    20              1                        500                     seq_item.RD_EN_ON_DIST = read_dist;
    21              1                        500                     seq_item.WR_EN_ON_DIST = write_dist;
    22              1                        500                     start_item (seq_item) ;
    23                                                               assert(seq_item.randomize()) ;
    24              1                        500                     finish_item(seq_item) ;
    25                                                           end 
    26                                               
    27                                                       // Randomize transactions with mostly writes
    28              1                          1             read_dist = 70 ; write_dist = 50 ;
    28              2                          1     
    29              1                        500                 repeat (500) begin
    30              1                        500                     seq_item = fifo_seq_item :: type_id :: create("seq_item");
    31              1                        500                     seq_item.RD_EN_ON_DIST = read_dist;
    32              1                        500                     seq_item.WR_EN_ON_DIST = write_dist;
    33              1                        500                     start_item (seq_item) ;
    34                                                               assert(seq_item.randomize()) ;
    35              1                        500                     finish_item(seq_item) ;
    36                                                           end 
    37                                               
    38                                                       // Randomize transactions with equal reads and writes
    39              1                          1             read_dist = 50 ; write_dist = 50 ;
    39              2                          1     
    40              1                        500                 repeat (500) begin
    41              1                        500                     seq_item = fifo_seq_item :: type_id :: create("seq_item");
    42              1                        500                     seq_item.RD_EN_ON_DIST = read_dist;
    43              1                        500                     seq_item.WR_EN_ON_DIST = write_dist;
    44              1                        500                     start_item (seq_item) ;
    45                                                               assert(seq_item.randomize()) ;
    46              1                        500                     finish_item(seq_item) ;


=================================================================================
=== Instance: /fifo_read_only_seq_pkg
=== Design Unit: work.fifo_read_only_seq_pkg
=================================================================================

Assertion Coverage:
    Assertions                       1         1         0   100.00%
--------------------------------------------------------------------------------------------------------------------------------
Name                 File(Line)                   Failure      Pass     Vacuous    Disable    Attempt     Active Peak Active ATV
                                                  Count        Count    Count      Count      Count       Count  Count          
--------------------------------------------------------------------------------------------------------------------------------
/fifo_read_only_seq_pkg/fifo_read_only_seq/body/#ublk#143532583#14/immed__19
                     fifo_read_only_seq_pkg.sv(19)
                                                        0         50          0          0         50          0           - off
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                        10         2         8    20.00%

================================Branch Details================================

Branch Coverage for instance /fifo_read_only_seq_pkg

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File fifo_read_only_seq_pkg.sv
------------------------------------IF Branch------------------------------------
    6                                    ***0***     Count coming in to IF
    6               1                    ***0***         `uvm_object_utils(fifo_read_only_seq)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    6                                          1     Count coming in to IF
    6               2                    ***0***         `uvm_object_utils(fifo_read_only_seq)
                                               1     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    6                                    ***0***     Count coming in to IF
    6               3                    ***0***         `uvm_object_utils(fifo_read_only_seq)
    6               4                    ***0***         `uvm_object_utils(fifo_read_only_seq)
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    6                                          1     Count coming in to IF
    6               5                    ***0***         `uvm_object_utils(fifo_read_only_seq)
                                               1     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    6                                    ***0***     Count coming in to IF
    6               6                    ***0***         `uvm_object_utils(fifo_read_only_seq)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%


Condition Coverage:
    Enabled Coverage              Bins   Covered    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Conditions                       2         0         2     0.00%

================================Condition Details================================

Condition Coverage for instance /fifo_read_only_seq_pkg --

  File fifo_read_only_seq_pkg.sv
----------------Focused Condition View-------------------
Line       6 Item    1  (name != 0)
Condition totals: 0 of 1 input term covered = 0.00%

   Input Term   Covered  Reason for no coverage   Hint
  -----------  --------  -----------------------  --------------
  (name != 0)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:    ***0***  (name != 0)_0         -                             
  Row   2:    ***0***  (name != 0)_1         -                             

----------------Focused Condition View-------------------
Line       6 Item    2  (tmp_data__ != null)
Condition totals: 0 of 1 input term covered = 0.00%

            Input Term   Covered  Reason for no coverage   Hint
           -----------  --------  -----------------------  --------------
  (tmp_data__ != null)         N  '_1' not hit             Hit '_1'

     Rows:       Hits  FEC Target              Non-masking condition(s)      
 ---------  ---------  --------------------    -------------------------     
  Row   1:          1  (tmp_data__ != null)_0  -                             
  Row   2:    ***0***  (tmp_data__ != null)_1  -                             


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      19        11         8    57.89%

================================Statement Details================================

Statement Coverage for instance /fifo_read_only_seq_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File fifo_read_only_seq_pkg.sv
    1                                                package fifo_read_only_seq_pkg ;
    2                                                    import fifo_seq_item_pkg::*;
    3                                                    import uvm_pkg::*;
    4                                                    `include "uvm_macros.svh" 
    5                                                    class fifo_read_only_seq extends uvm_sequence #(fifo_seq_item);
    6               1                    ***0***         `uvm_object_utils(fifo_read_only_seq)
    6               2                    ***0***     
    6               3                    ***0***     
    6               4                    ***0***     
    6               5                    ***0***     
    6               6                          1     
    6               7                    ***0***     
    6               8                    ***0***     
    6               9                          1     
    6              10                    ***0***     
    7                                                    fifo_seq_item seq_item ;
    8               1                          1         int read_dist = 100 ; // Read only
    9               1                          1         int write_dist = 0 ; // No write 
    10                                                       function new(string name = "fifo_read_only_seq" );
    11              1                          1                 super.new(name) ;
    12                                                       endfunction //new()
    13                                                       task body ;
    14              1                         50                repeat (50) begin
    15              1                         50                 seq_item = fifo_seq_item :: type_id :: create("seq_item");
    16              1                         50                 seq_item.RD_EN_ON_DIST = read_dist;
    17              1                         50                 seq_item.WR_EN_ON_DIST = write_dist;
    18              1                         50                 start_item (seq_item) ;
    19                                                           assert(seq_item.randomize()) ;
    20              1                         50                 finish_item(seq_item) ;


=================================================================================
=== Instance: /fifo_write_only_seq_pkg
=== Design Unit: work.fifo_write_only_seq_pkg
=================================================================================

Assertion Coverage:
    Assertions                       1         1         0   100.00%
--------------------------------------------------------------------------------------------------------------------------------
Name                 File(Line)                   Failure      Pass     Vacuous    Disable    Attempt     Active Peak Active ATV
                                                  Count        Count    Count      Count      Count       Count  Count          
--------------------------------------------------------------------------------------------------------------------------------
/fifo_write_only_seq_pkg/fifo_write_only_seq/body/#ublk#220570231#14/immed__19
                     fifo_write_only_seq_pkg.sv(19)
                                                        0         50          0          0         50          0           - off
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                        10         2         8    20.00%

================================Branch Details================================

Branch Coverage for instance /fifo_write_only_seq_pkg

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File fifo_write_only_seq_pkg.sv
------------------------------------IF Branch------------------------------------
    6                                    ***0***     Count coming in to IF
    6               1                    ***0***         `uvm_object_utils(fifo_write_only_seq)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    6                                          1     Count coming in to IF
    6               2                    ***0***         `uvm_object_utils(fifo_write_only_seq)
                                               1     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    6                                    ***0***     Count coming in to IF
    6               3                    ***0***         `uvm_object_utils(fifo_write_only_seq)
    6               4                    ***0***         `uvm_object_utils(fifo_write_only_seq)
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    6                                          1     Count coming in to IF
    6               5                    ***0***         `uvm_object_utils(fifo_write_only_seq)
                                               1     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    6                                    ***0***     Count coming in to IF
    6               6                    ***0***         `uvm_object_utils(fifo_write_only_seq)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%


Condition Coverage:
    Enabled Coverage              Bins   Covered    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Conditions                       2         0         2     0.00%

================================Condition Details================================

Condition Coverage for instance /fifo_write_only_seq_pkg --

  File fifo_write_only_seq_pkg.sv
----------------Focused Condition View-------------------
Line       6 Item    1  (name != 0)
Condition totals: 0 of 1 input term covered = 0.00%

   Input Term   Covered  Reason for no coverage   Hint
  -----------  --------  -----------------------  --------------
  (name != 0)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:    ***0***  (name != 0)_0         -                             
  Row   2:    ***0***  (name != 0)_1         -                             

----------------Focused Condition View-------------------
Line       6 Item    2  (tmp_data__ != null)
Condition totals: 0 of 1 input term covered = 0.00%

            Input Term   Covered  Reason for no coverage   Hint
           -----------  --------  -----------------------  --------------
  (tmp_data__ != null)         N  '_1' not hit             Hit '_1'

     Rows:       Hits  FEC Target              Non-masking condition(s)      
 ---------  ---------  --------------------    -------------------------     
  Row   1:          1  (tmp_data__ != null)_0  -                             
  Row   2:    ***0***  (tmp_data__ != null)_1  -                             


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      19        11         8    57.89%

================================Statement Details================================

Statement Coverage for instance /fifo_write_only_seq_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File fifo_write_only_seq_pkg.sv
    1                                                package fifo_write_only_seq_pkg ;
    2                                                    import fifo_seq_item_pkg::*;
    3                                                    import uvm_pkg::*;
    4                                                    `include "uvm_macros.svh" 
    5                                                    class fifo_write_only_seq extends uvm_sequence #(fifo_seq_item);
    6               1                    ***0***         `uvm_object_utils(fifo_write_only_seq)
    6               2                    ***0***     
    6               3                    ***0***     
    6               4                    ***0***     
    6               5                    ***0***     
    6               6                          1     
    6               7                    ***0***     
    6               8                    ***0***     
    6               9                          1     
    6              10                    ***0***     
    7                                                    fifo_seq_item seq_item ;
    8               1                          1         int read_dist = 0 ; // No read
    9               1                          1         int write_dist = 100 ; // Write only 
    10                                                       function new(string name = "fifo_write_only_seq" );
    11              1                          1                 super.new(name) ;
    12                                                       endfunction //new()
    13                                                       task body ;
    14              1                         50                repeat (50) begin
    15              1                         50                 seq_item = fifo_seq_item :: type_id :: create("seq_item");
    16              1                         50                 seq_item.RD_EN_ON_DIST = read_dist;
    17              1                         50                 seq_item.WR_EN_ON_DIST = write_dist;
    18              1                         50                 start_item (seq_item) ;
    19                                                           assert(seq_item.randomize()) ;
    20              1                         50                 finish_item(seq_item) ;


=================================================================================
=== Instance: /fifo_reset_seq_pkg
=== Design Unit: work.fifo_reset_seq_pkg
=================================================================================

Assertion Coverage:
    Assertions                       1         1         0   100.00%
--------------------------------------------------------------------------------------------------------------------------------
Name                 File(Line)                   Failure      Pass     Vacuous    Disable    Attempt     Active Peak Active ATV
                                                  Count        Count    Count      Count      Count       Count  Count          
--------------------------------------------------------------------------------------------------------------------------------
/fifo_reset_seq_pkg/fifo_reset_seq/body/immed__15
                     fifo_reset_seq_pkg.sv(15)          0          1          0          0          1          0           - off
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                        10         2         8    20.00%

================================Branch Details================================

Branch Coverage for instance /fifo_reset_seq_pkg

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File fifo_reset_seq_pkg.sv
------------------------------------IF Branch------------------------------------
    6                                    ***0***     Count coming in to IF
    6               1                    ***0***         `uvm_object_utils(fifo_reset_seq)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    6                                          1     Count coming in to IF
    6               2                    ***0***         `uvm_object_utils(fifo_reset_seq)
                                               1     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    6                                    ***0***     Count coming in to IF
    6               3                    ***0***         `uvm_object_utils(fifo_reset_seq)
    6               4                    ***0***         `uvm_object_utils(fifo_reset_seq)
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    6                                          1     Count coming in to IF
    6               5                    ***0***         `uvm_object_utils(fifo_reset_seq)
                                               1     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    6                                    ***0***     Count coming in to IF
    6               6                    ***0***         `uvm_object_utils(fifo_reset_seq)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%


Condition Coverage:
    Enabled Coverage              Bins   Covered    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Conditions                       2         0         2     0.00%

================================Condition Details================================

Condition Coverage for instance /fifo_reset_seq_pkg --

  File fifo_reset_seq_pkg.sv
----------------Focused Condition View-------------------
Line       6 Item    1  (name != 0)
Condition totals: 0 of 1 input term covered = 0.00%

   Input Term   Covered  Reason for no coverage   Hint
  -----------  --------  -----------------------  --------------
  (name != 0)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:    ***0***  (name != 0)_0         -                             
  Row   2:    ***0***  (name != 0)_1         -                             

----------------Focused Condition View-------------------
Line       6 Item    2  (tmp_data__ != null)
Condition totals: 0 of 1 input term covered = 0.00%

            Input Term   Covered  Reason for no coverage   Hint
           -----------  --------  -----------------------  --------------
  (tmp_data__ != null)         N  '_1' not hit             Hit '_1'

     Rows:       Hits  FEC Target              Non-masking condition(s)      
 ---------  ---------  --------------------    -------------------------     
  Row   1:          1  (tmp_data__ != null)_0  -                             
  Row   2:    ***0***  (tmp_data__ != null)_1  -                             


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      15         7         8    46.66%

================================Statement Details================================

Statement Coverage for instance /fifo_reset_seq_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File fifo_reset_seq_pkg.sv
    1                                                package fifo_reset_seq_pkg ;
    2                                                    import fifo_seq_item_pkg::*;
    3                                                    import uvm_pkg::*;
    4                                                    `include "uvm_macros.svh" 
    5                                                    class fifo_reset_seq extends uvm_sequence #(fifo_seq_item);
    6               1                    ***0***         `uvm_object_utils(fifo_reset_seq)
    6               2                    ***0***     
    6               3                    ***0***     
    6               4                    ***0***     
    6               5                    ***0***     
    6               6                          1     
    6               7                    ***0***     
    6               8                    ***0***     
    6               9                          1     
    6              10                    ***0***     
    7                                                    fifo_seq_item seq_item ;
    8                                                 
    9                                                        function new(string name = "fifo_reset_seq" );
    10              1                          1                 super.new(name) ;
    11                                                       endfunction //new()
    12                                                       task body ;
    13              1                          1                 seq_item = fifo_seq_item :: type_id :: create("seq_item");
    14              1                          1                 start_item (seq_item) ;
    15                                                           assert(seq_item.randomize()) ;
    16              1                          1                 seq_item.rst_n = 0 ; 
    17              1                          1                 finish_item(seq_item) ;


=================================================================================
=== Instance: /fifo_coverage_pkg
=== Design Unit: work.fifo_coverage_pkg
=================================================================================

Covergroup Coverage:
    Covergroups                      1        na        na   100.00%
        Coverpoints/Crosses         17        na        na        na
            Covergroup Bins         66        66         0   100.00%
----------------------------------------------------------------------------------------------------------
Covergroup                                             Metric       Goal       Bins    Status               
                                                                                                         
----------------------------------------------------------------------------------------------------------
 TYPE /fifo_coverage_pkg/fifo_coverage/cvr_gp         100.00%        100          -    Covered              
    covered/total bins:                                    66         66          -                      
    missing/total bins:                                     0         66          -                      
    % Hit:                                            100.00%        100          -                      
    Coverpoint Reset                                  100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        bin auto[0]                                        15          1          -    Covered              
        bin auto[1]                                      1586          1          -    Covered              
    Coverpoint Read_EN                                100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        bin auto[0]                                       771          1          -    Covered              
        bin auto[1]                                       830          1          -    Covered              
    Coverpoint Write_EN                               100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        bin auto[0]                                       698          1          -    Covered              
        bin auto[1]                                       903          1          -    Covered              
    Coverpoint Write_acknowledge                      100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        bin auto[0]                                       904          1          -    Covered              
        bin auto[1]                                       697          1          -    Covered              
    Coverpoint Overflow                               100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        bin auto[0]                                      1457          1          -    Covered              
        bin auto[1]                                       144          1          -    Covered              
    Coverpoint FULL                                   100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        bin auto[0]                                      1336          1          -    Covered              
        bin auto[1]                                       265          1          -    Covered              
    Coverpoint EMPTY                                  100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        bin auto[0]                                      1314          1          -    Covered              
        bin auto[1]                                       287          1          -    Covered              
    Coverpoint ALMOSTFULL                             100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        bin auto[0]                                      1451          1          -    Covered              
        bin auto[1]                                       150          1          -    Covered              
    Coverpoint ALMOSTEMPTY                            100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        bin auto[0]                                      1214          1          -    Covered              
        bin auto[1]                                       387          1          -    Covered              
    Coverpoint UNDERFLOW                              100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        bin auto[0]                                      1491          1          -    Covered              
        bin auto[1]                                       110          1          -    Covered              
    Cross Cross_rd_wr_writer_ack                      100.00%        100          -    Covered              
        covered/total bins:                                 6          6          -                      
        missing/total bins:                                 0          6          -                      
        % Hit:                                        100.00%        100          -                      
        Auto, Default and User Defined Bins:
            bin <auto[1],auto[1],auto[1]>                 362          1          -    Covered              
            bin <auto[1],auto[1],auto[0]>                  56          1          -    Covered              
            bin <auto[0],auto[1],auto[1]>                 335          1          -    Covered              
            bin <auto[0],auto[1],auto[0]>                 150          1          -    Covered              
            bin <auto[1],auto[0],auto[0]>                 412          1          -    Covered              
            bin <auto[0],auto[0],auto[0]>                 286          1          -    Covered              
        Illegal and Ignore Bins:
            illegal_bin high_wr_ack_low_write               0                     -    ZERO                 
    Cross Cross_rd_wr_Overflow                        100.00%        100          -    Covered              
        covered/total bins:                                 5          5          -                      
        missing/total bins:                                 0          5          -                      
        % Hit:                                        100.00%        100          -                      
        Auto, Default and User Defined Bins:
            bin <auto[1],auto[1],auto[0]>                 418          1          -    Covered              
            bin <auto[1],auto[0],auto[0]>                 412          1          -    Covered              
            bin <auto[0],auto[1],auto[1]>                 144          1          -    Covered              
            bin <auto[0],auto[1],auto[0]>                 341          1          -    Covered              
            bin <auto[0],auto[0],auto[0]>                 286          1          -    Covered              
        Illegal and Ignore Bins:
            illegal_bin high_rd_full_low_write              0                     -    ZERO                 
            illegal_bin high_overflow_low_write             0                     -    ZERO                 
    Cross Cross_rd_wr_FULL                            100.00%        100          -    Covered              
        covered/total bins:                                 6          6          -                      
        missing/total bins:                                 0          6          -                      
        % Hit:                                        100.00%        100          -                      
        Auto, Default and User Defined Bins:
            bin <auto[0],auto[1],auto[1]>                 221          1          -    Covered              
            bin <auto[0],auto[0],auto[1]>                  44          1          -    Covered              
            bin <auto[1],auto[1],auto[0]>                 418          1          -    Covered              
            bin <auto[1],auto[0],auto[0]>                 412          1          -    Covered              
            bin <auto[0],auto[1],auto[0]>                 264          1          -    Covered              
            bin <auto[0],auto[0],auto[0]>                 242          1          -    Covered              
        Illegal and Ignore Bins:
            illegal_bin high_rd_full_low_write              0                     -    ZERO                 
            illegal_bin all_high                            0                     -    ZERO                 
    Cross Cross_rd_wr_EMPTY                           100.00%        100          -    Covered              
        covered/total bins:                                 8          8          -                      
        missing/total bins:                                 0          8          -                      
        % Hit:                                        100.00%        100          -                      
        Auto, Default and User Defined Bins:
            bin <auto[1],auto[1],auto[1]>                   5          1          -    Covered              
            bin <auto[0],auto[1],auto[1]>                   6          1          -    Covered              
            bin <auto[1],auto[0],auto[1]>                 235          1          -    Covered              
            bin <auto[0],auto[0],auto[1]>                  41          1          -    Covered              
            bin <auto[1],auto[1],auto[0]>                 413          1          -    Covered              
            bin <auto[0],auto[1],auto[0]>                 479          1          -    Covered              
            bin <auto[1],auto[0],auto[0]>                 177          1          -    Covered              
            bin <auto[0],auto[0],auto[0]>                 245          1          -    Covered              
    Cross Cross_rd_wr_ALMOSTFULL                      100.00%        100          -    Covered              
        covered/total bins:                                 8          8          -                      
        missing/total bins:                                 0          8          -                      
        % Hit:                                        100.00%        100          -                      
        Auto, Default and User Defined Bins:
            bin <auto[1],auto[1],auto[1]>                  83          1          -    Covered              
            bin <auto[0],auto[1],auto[1]>                  21          1          -    Covered              
            bin <auto[1],auto[0],auto[1]>                  20          1          -    Covered              
            bin <auto[0],auto[0],auto[1]>                  26          1          -    Covered              
            bin <auto[1],auto[1],auto[0]>                 335          1          -    Covered              
            bin <auto[0],auto[1],auto[0]>                 464          1          -    Covered              
            bin <auto[1],auto[0],auto[0]>                 392          1          -    Covered              
            bin <auto[0],auto[0],auto[0]>                 260          1          -    Covered              
    Cross Cross_rd_wr_ALMOSTEMPTY                     100.00%        100          -    Covered              
        covered/total bins:                                 8          8          -                      
        missing/total bins:                                 0          8          -                      
        % Hit:                                        100.00%        100          -                      
        Auto, Default and User Defined Bins:
            bin <auto[1],auto[1],auto[1]>                 208          1          -    Covered              
            bin <auto[0],auto[1],auto[1]>                  50          1          -    Covered              
            bin <auto[1],auto[0],auto[1]>                  59          1          -    Covered              
            bin <auto[0],auto[0],auto[1]>                  70          1          -    Covered              
            bin <auto[1],auto[1],auto[0]>                 210          1          -    Covered              
            bin <auto[0],auto[1],auto[0]>                 435          1          -    Covered              
            bin <auto[1],auto[0],auto[0]>                 353          1          -    Covered              
            bin <auto[0],auto[0],auto[0]>                 216          1          -    Covered              
    Cross Cross_rd_wr_UNDERFLOW                       100.00%        100          -    Covered              
        covered/total bins:                                 5          5          -                      
        missing/total bins:                                 0          5          -                      
        % Hit:                                        100.00%        100          -                      
        Auto, Default and User Defined Bins:
            bin <auto[1],auto[1],auto[0]>                 418          1          -    Covered              
            bin <auto[0],auto[1],auto[0]>                 485          1          -    Covered              
            bin <auto[1],auto[0],auto[1]>                 110          1          -    Covered              
            bin <auto[1],auto[0],auto[0]>                 302          1          -    Covered              
            bin <auto[0],auto[0],auto[0]>                 286          1          -    Covered              
        Illegal and Ignore Bins:
            illegal_bin high_rd_full_low_write              0                     -    ZERO                 
            illegal_bin high_underflow_low_read             0                     -    ZERO                 
Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      14        12         2    85.71%

================================Statement Details================================

Statement Coverage for instance /fifo_coverage_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File fifo_coverage_pkg.sv
    1                                                package fifo_coverage_pkg ;
    2                                                import fifo_seq_item_pkg::*;
    3                                                import uvm_pkg::*;
    4                                                `include "uvm_macros.svh"
    5                                                class fifo_coverage extends uvm_component ;
    6               1                    ***0***     `uvm_component_utils(fifo_coverage)
    6               2                    ***0***     
    6               3                          2     
    7                                                uvm_analysis_export #(fifo_seq_item) cov_export;
    8                                                uvm_tlm_analysis_fifo #(fifo_seq_item) cov_fifo;
    9                                                fifo_seq_item seq_item_cov ; 
    10                                               
    11                                               covergroup  cvr_gp ;    
    12                                               Reset : coverpoint seq_item_cov.rst_n ;
    13                                               Read_EN : coverpoint seq_item_cov.rd_en ;
    14                                               Write_EN : coverpoint seq_item_cov.wr_en ;
    15                                               Write_acknowledge : coverpoint seq_item_cov.wr_ack ; 
    16                                               Overflow : coverpoint seq_item_cov.overflow ;
    17                                               FULL : coverpoint seq_item_cov.full ;
    18                                               EMPTY : coverpoint seq_item_cov.empty ;
    19                                               ALMOSTFULL : coverpoint seq_item_cov.almostfull ;
    20                                               ALMOSTEMPTY : coverpoint seq_item_cov.almostempty ;
    21                                               UNDERFLOW : coverpoint seq_item_cov.underflow ;
    22                                               // crossing read_en and write_en with the outputs 
    23                                               Cross_rd_wr_writer_ack : cross Read_EN , Write_EN , Write_acknowledge {
    24                                                   illegal_bins high_wr_ack_low_write = binsof(Write_acknowledge) intersect {1} && binsof(Write_EN) intersect {0} ; // they mustn't happened  
    25                                               }
    26                                               Cross_rd_wr_Overflow : cross Read_EN , Write_EN , Overflow {
    27                                                   illegal_bins high_overflow_low_write = binsof(Overflow) intersect {1} && binsof(Write_EN) intersect {0} ; // they mustn't happened 
    28                                                   illegal_bins high_rd_full_low_write = binsof(Write_EN) intersect {1} && binsof (Read_EN) intersect {1} && binsof(Overflow) intersect {1} ; // they mustn't happend 
    29                                               }
    30                                               Cross_rd_wr_FULL : cross Read_EN , Write_EN , FULL {
    31                                                   illegal_bins all_high = binsof(Write_EN) intersect {1} && binsof (Read_EN) intersect {1} && binsof(FULL) intersect {1} ; // they mustn't happend 
    32                                                   illegal_bins high_rd_full_low_write = binsof(Write_EN) intersect {0} && binsof (Read_EN) intersect {1} && binsof(FULL) intersect {1} ; // they mustn't happend 
    33                                               }
    34                                               Cross_rd_wr_EMPTY : cross Read_EN , Write_EN , EMPTY ;
    35                                               Cross_rd_wr_ALMOSTFULL : cross Read_EN , Write_EN , ALMOSTFULL ;
    36                                               Cross_rd_wr_ALMOSTEMPTY : cross Read_EN , Write_EN , ALMOSTEMPTY ;
    37                                               Cross_rd_wr_UNDERFLOW : cross Read_EN , Write_EN , UNDERFLOW {
    38                                                   illegal_bins high_underflow_low_read = binsof(UNDERFLOW) intersect {1} && binsof(Read_EN) intersect {0} ; // they mustn't happened 
    39                                                   illegal_bins high_rd_full_low_write = binsof(Write_EN) intersect {1} && binsof (Read_EN) intersect {1} && binsof(UNDERFLOW) intersect {1} ; // they mustn't happend 
    40                                               }
    41                                               endgroup
    42                                               
    43                                               function new(string name = "fifo_coverage" , uvm_component parent = null);
    44              1                          1         super.new(name,parent);
    45              1                          1         cvr_gp = new() ;     
    46                                               endfunction //new()
    47                                               
    48                                                   function void build_phase(uvm_phase phase);
    49              1                          1             super.build_phase(phase);
    50              1                          1             cov_export = new("cov_export", this);
    51              1                          1             cov_fifo = new("cov_fifo", this);
    52                                                   endfunction
    53                                               
    54                                                   function void connect_phase(uvm_phase phase);
    55              1                          1             super.connect_phase(phase);
    56              1                          1             cov_export.connect(cov_fifo.analysis_export);
    57                                                   endfunction
    58                                               
    59                                                   task run_phase(uvm_phase phase);
    60              1                          1             super.run_phase(phase);
    61              1                          1             forever begin
    62              1                       1602                 cov_fifo.get(seq_item_cov);
    63              1                       1601                 cvr_gp.sample();


=================================================================================
=== Instance: /fifo_scoreboard_pkg
=== Design Unit: work.fifo_scoreboard_pkg
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                        28        22         6    78.57%

================================Branch Details================================

Branch Coverage for instance /fifo_scoreboard_pkg

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File fifo_scoreboard_pkg.sv
------------------------------------IF Branch------------------------------------
    43                                      1601     Count coming in to IF
    43              1                    ***0***                     if (seq_item_sb.data_out != data_out_ref) begin
    47              1                       1601                     else begin
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    52                                      1601     Count coming in to IF
    52              1                    ***0***                     if (seq_item_sb.full != full_ref || seq_item_sb.almostfull != almostfull_ref || seq_item_sb.empty != empty_ref 
                                            1601     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    63                                      1601     Count coming in to IF
    63              1                         15                     if (!seq_item_check.rst_n) begin
    68              1                       1586                     else begin
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------CASE Branch------------------------------------
    72                                      1586     Count coming in to CASE
    73              1                        413                             2'b11: begin // write and read 
    90              1                        479                             2'b10 : begin // write only 
    100             1                        409                             2'b01 : begin // read only 
    111             1                        285                             2'b00 : begin
                                         ***0***     All False Count
Branch totals: 4 hits of 5 branches = 80.00%

------------------------------------IF Branch------------------------------------
    74                                       413     Count coming in to IF
    74              1                        277                                 if(actual_size != FULL_SIZE && actual_size != EMPTY_SIZE) begin
    79              1                         51                                 else if (actual_size == FULL_SIZE) begin
    84              1                         85                                 else if (actual_size == EMPTY_SIZE) begin
                                         ***0***     All False Count
Branch totals: 3 hits of 4 branches = 75.00%

------------------------------------IF Branch------------------------------------
    91                                       479     Count coming in to IF
    91              1                        335                                 if(actual_size != FULL_SIZE) begin
    96              1                        144                                 else begin
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    101                                      409     Count coming in to IF
    101             1                        299                                 if(actual_size != EMPTY_SIZE) begin
    106             1                        110                                 else begin
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    118                                     1601     Count coming in to IF
    118             1                        265                         if (actual_size == FULL_SIZE) begin
    121             1                        150                         else if (actual_size == ALMOST_FULL_SIZE) begin
    124             1                        287                         else if (actual_size == EMPTY_SIZE) begin
    127             1                        387                         else if (actual_size == ALMOST_EMPTY_SIZE) begin
                                             512     All False Count
Branch totals: 5 hits of 5 branches = 100.00%

------------------------------------IF Branch------------------------------------
    134                                        1     Count coming in to IF
    134             1                          1                 `uvm_info("report_phase", $sformatf("Total successful transactions: %0d", correct_count), UVM_MEDIUM);
                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    135                                        1     Count coming in to IF
    135             1                          1                 `uvm_info("report_phase", $sformatf("Total failed transactions: %0d", error_count), UVM_MEDIUM);
                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%


Condition Coverage:
    Enabled Coverage              Bins   Covered    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Conditions                      18         9         9    50.00%

================================Condition Details================================

Condition Coverage for instance /fifo_scoreboard_pkg --

  File fifo_scoreboard_pkg.sv
----------------Focused Condition View-------------------
Line       43 Item    1  (this.seq_item_sb.data_out != this.data_out_ref)
Condition totals: 0 of 1 input term covered = 0.00%

                                        Input Term   Covered  Reason for no coverage   Hint
                                       -----------  --------  -----------------------  --------------
  (this.seq_item_sb.data_out != this.data_out_ref)         N  '_1' not hit             Hit '_1'

     Rows:       Hits  FEC Target                                          Non-masking condition(s)      
 ---------  ---------  --------------------                                -------------------------     
  Row   1:          1  (this.seq_item_sb.data_out != this.data_out_ref)_0  -                             
  Row   2:    ***0***  (this.seq_item_sb.data_out != this.data_out_ref)_1  -                             

----------------Focused Condition View-------------------
Line       52 Item    1  ((this.seq_item_sb.full != this.full_ref) || (this.seq_item_sb.almostfull != this.almostfull_ref) || (this.seq_item_sb.empty != this.empty_ref) || (this.seq_item_sb.almostempty != this.almostempty_ref) || (this.seq_item_sb.wr_ack != this.wr_ack_ref) || (this.seq_item_sb.overflow != this.overflow_ref) || (this.seq_item_sb.underflow != this.underflow_ref))
Condition totals: 0 of 7 input terms covered = 0.00%

                                              Input Term   Covered  Reason for no coverage   Hint
                                             -----------  --------  -----------------------  --------------
                (this.seq_item_sb.full != this.full_ref)         N  '_1' not hit             Hit '_1'
    (this.seq_item_sb.almostfull != this.almostfull_ref)         N  '_1' not hit             Hit '_1'
              (this.seq_item_sb.empty != this.empty_ref)         N  '_1' not hit             Hit '_1'
  (this.seq_item_sb.almostempty != this.almostempty_ref)         N  '_1' not hit             Hit '_1'
            (this.seq_item_sb.wr_ack != this.wr_ack_ref)         N  '_1' not hit             Hit '_1'
        (this.seq_item_sb.overflow != this.overflow_ref)         N  '_1' not hit             Hit '_1'
      (this.seq_item_sb.underflow != this.underflow_ref)         N  '_1' not hit             Hit '_1'

     Rows:       Hits  FEC Target                                                Non-masking condition(s)      
 ---------  ---------  --------------------                                      -------------------------     
  Row   1:          1  (this.seq_item_sb.full != this.full_ref)_0                ~((this.seq_item_sb.almostfull != this.almostfull_ref) || ((this.seq_item_sb.empty != this.empty_ref) || ((this.seq_item_sb.almostempty != this.almostempty_ref) || ((this.seq_item_sb.wr_ack != this.wr_ack_ref) || ((this.seq_item_sb.overflow != this.overflow_ref) || (this.seq_item_sb.underflow != this.underflow_ref))))))
  Row   2:    ***0***  (this.seq_item_sb.full != this.full_ref)_1                -                             
  Row   3:          1  (this.seq_item_sb.almostfull != this.almostfull_ref)_0    (~(this.seq_item_sb.full != this.full_ref) && ~((this.seq_item_sb.empty != this.empty_ref) || ((this.seq_item_sb.almostempty != this.almostempty_ref) || ((this.seq_item_sb.wr_ack != this.wr_ack_ref) || ((this.seq_item_sb.overflow != this.overflow_ref) || (this.seq_item_sb.underflow != this.underflow_ref))))))
  Row   4:    ***0***  (this.seq_item_sb.almostfull != this.almostfull_ref)_1    ~(this.seq_item_sb.full != this.full_ref)
  Row   5:          1  (this.seq_item_sb.empty != this.empty_ref)_0              (~(this.seq_item_sb.full != this.full_ref) && ~(this.seq_item_sb.almostfull != this.almostfull_ref) && ~((this.seq_item_sb.almostempty != this.almostempty_ref) || ((this.seq_item_sb.wr_ack != this.wr_ack_ref) || ((this.seq_item_sb.overflow != this.overflow_ref) || (this.seq_item_sb.underflow != this.underflow_ref)))))
  Row   6:    ***0***  (this.seq_item_sb.empty != this.empty_ref)_1              (~(this.seq_item_sb.full != this.full_ref) && ~(this.seq_item_sb.almostfull != this.almostfull_ref))
  Row   7:          1  (this.seq_item_sb.almostempty != this.almostempty_ref)_0  (~(this.seq_item_sb.full != this.full_ref) && ~(this.seq_item_sb.almostfull != this.almostfull_ref) && ~(this.seq_item_sb.empty != this.empty_ref) && ~((this.seq_item_sb.wr_ack != this.wr_ack_ref) || ((this.seq_item_sb.overflow != this.overflow_ref) || (this.seq_item_sb.underflow != this.underflow_ref))))
  Row   8:    ***0***  (this.seq_item_sb.almostempty != this.almostempty_ref)_1  (~(this.seq_item_sb.full != this.full_ref) && ~(this.seq_item_sb.almostfull != this.almostfull_ref) && ~(this.seq_item_sb.empty != this.empty_ref))
  Row   9:          1  (this.seq_item_sb.wr_ack != this.wr_ack_ref)_0            (~(this.seq_item_sb.full != this.full_ref) && ~(this.seq_item_sb.almostfull != this.almostfull_ref) && ~(this.seq_item_sb.empty != this.empty_ref) && ~(this.seq_item_sb.almostempty != this.almostempty_ref) && ~((this.seq_item_sb.overflow != this.overflow_ref) || (this.seq_item_sb.underflow != this.underflow_ref)))
 Row   10:    ***0***  (this.seq_item_sb.wr_ack != this.wr_ack_ref)_1            (~(this.seq_item_sb.full != this.full_ref) && ~(this.seq_item_sb.almostfull != this.almostfull_ref) && ~(this.seq_item_sb.empty != this.empty_ref) && ~(this.seq_item_sb.almostempty != this.almostempty_ref))
 Row   11:          1  (this.seq_item_sb.overflow != this.overflow_ref)_0        (~(this.seq_item_sb.full != this.full_ref) && ~(this.seq_item_sb.almostfull != this.almostfull_ref) && ~(this.seq_item_sb.empty != this.empty_ref) && ~(this.seq_item_sb.almostempty != this.almostempty_ref) && ~(this.seq_item_sb.wr_ack != this.wr_ack_ref) && ~(this.seq_item_sb.underflow != this.underflow_ref))
 Row   12:    ***0***  (this.seq_item_sb.overflow != this.overflow_ref)_1        (~(this.seq_item_sb.full != this.full_ref) && ~(this.seq_item_sb.almostfull != this.almostfull_ref) && ~(this.seq_item_sb.empty != this.empty_ref) && ~(this.seq_item_sb.almostempty != this.almostempty_ref) && ~(this.seq_item_sb.wr_ack != this.wr_ack_ref))
 Row   13:          1  (this.seq_item_sb.underflow != this.underflow_ref)_0      (~(this.seq_item_sb.full != this.full_ref) && ~(this.seq_item_sb.almostfull != this.almostfull_ref) && ~(this.seq_item_sb.empty != this.empty_ref) && ~(this.seq_item_sb.almostempty != this.almostempty_ref) && ~(this.seq_item_sb.wr_ack != this.wr_ack_ref) && ~(this.seq_item_sb.overflow != this.overflow_ref))
 Row   14:    ***0***  (this.seq_item_sb.underflow != this.underflow_ref)_1      (~(this.seq_item_sb.full != this.full_ref) && ~(this.seq_item_sb.almostfull != this.almostfull_ref) && ~(this.seq_item_sb.empty != this.empty_ref) && ~(this.seq_item_sb.almostempty != this.almostempty_ref) && ~(this.seq_item_sb.wr_ack != this.wr_ack_ref) && ~(this.seq_item_sb.overflow != this.overflow_ref))

----------------Focused Condition View-------------------
Line       74 Item    1  ((this.actual_size != this.FULL_SIZE) && (this.actual_size != this.EMPTY_SIZE))
Condition totals: 2 of 2 input terms covered = 100.00%

                             Input Term   Covered  Reason for no coverage   Hint
                            -----------  --------  -----------------------  --------------
   (this.actual_size != this.FULL_SIZE)         Y
  (this.actual_size != this.EMPTY_SIZE)         Y

     Rows:       Hits  FEC Target                               Non-masking condition(s)      
 ---------  ---------  --------------------                     -------------------------     
  Row   1:          1  (this.actual_size != this.FULL_SIZE)_0   -                             
  Row   2:          1  (this.actual_size != this.FULL_SIZE)_1   (this.actual_size != this.EMPTY_SIZE)
  Row   3:          1  (this.actual_size != this.EMPTY_SIZE)_0  (this.actual_size != this.FULL_SIZE)
  Row   4:          1  (this.actual_size != this.EMPTY_SIZE)_1  (this.actual_size != this.FULL_SIZE)

----------------Focused Condition View-------------------
Line       79 Item    1  (this.actual_size == this.FULL_SIZE)
Condition totals: 1 of 1 input term covered = 100.00%

                            Input Term   Covered  Reason for no coverage   Hint
                           -----------  --------  -----------------------  --------------
  (this.actual_size == this.FULL_SIZE)         Y

     Rows:       Hits  FEC Target                              Non-masking condition(s)      
 ---------  ---------  --------------------                    -------------------------     
  Row   1:          1  (this.actual_size == this.FULL_SIZE)_0  -                             
  Row   2:          1  (this.actual_size == this.FULL_SIZE)_1  -                             

----------------Focused Condition View-------------------
Line       84 Item    1  (this.actual_size == this.EMPTY_SIZE)
Condition totals: 0 of 1 input term covered = 0.00%

                             Input Term   Covered  Reason for no coverage   Hint
                            -----------  --------  -----------------------  --------------
  (this.actual_size == this.EMPTY_SIZE)         N  '_0' not hit             Hit '_0'

     Rows:       Hits  FEC Target                               Non-masking condition(s)      
 ---------  ---------  --------------------                     -------------------------     
  Row   1:    ***0***  (this.actual_size == this.EMPTY_SIZE)_0  -                             
  Row   2:          1  (this.actual_size == this.EMPTY_SIZE)_1  -                             

----------------Focused Condition View-------------------
Line       91 Item    1  (this.actual_size != this.FULL_SIZE)
Condition totals: 1 of 1 input term covered = 100.00%

                            Input Term   Covered  Reason for no coverage   Hint
                           -----------  --------  -----------------------  --------------
  (this.actual_size != this.FULL_SIZE)         Y

     Rows:       Hits  FEC Target                              Non-masking condition(s)      
 ---------  ---------  --------------------                    -------------------------     
  Row   1:          1  (this.actual_size != this.FULL_SIZE)_0  -                             
  Row   2:          1  (this.actual_size != this.FULL_SIZE)_1  -                             

----------------Focused Condition View-------------------
Line       101 Item    1  (this.actual_size != this.EMPTY_SIZE)
Condition totals: 1 of 1 input term covered = 100.00%

                             Input Term   Covered  Reason for no coverage   Hint
                            -----------  --------  -----------------------  --------------
  (this.actual_size != this.EMPTY_SIZE)         Y

     Rows:       Hits  FEC Target                               Non-masking condition(s)      
 ---------  ---------  --------------------                     -------------------------     
  Row   1:          1  (this.actual_size != this.EMPTY_SIZE)_0  -                             
  Row   2:          1  (this.actual_size != this.EMPTY_SIZE)_1  -                             

----------------Focused Condition View-------------------
Line       118 Item    1  (this.actual_size == this.FULL_SIZE)
Condition totals: 1 of 1 input term covered = 100.00%

                            Input Term   Covered  Reason for no coverage   Hint
                           -----------  --------  -----------------------  --------------
  (this.actual_size == this.FULL_SIZE)         Y

     Rows:       Hits  FEC Target                              Non-masking condition(s)      
 ---------  ---------  --------------------                    -------------------------     
  Row   1:          1  (this.actual_size == this.FULL_SIZE)_0  -                             
  Row   2:          1  (this.actual_size == this.FULL_SIZE)_1  -                             

----------------Focused Condition View-------------------
Line       121 Item    1  (this.actual_size == this.ALMOST_FULL_SIZE)
Condition totals: 1 of 1 input term covered = 100.00%

                                   Input Term   Covered  Reason for no coverage   Hint
                                  -----------  --------  -----------------------  --------------
  (this.actual_size == this.ALMOST_FULL_SIZE)         Y

     Rows:       Hits  FEC Target                                     Non-masking condition(s)      
 ---------  ---------  --------------------                           -------------------------     
  Row   1:          1  (this.actual_size == this.ALMOST_FULL_SIZE)_0  -                             
  Row   2:          1  (this.actual_size == this.ALMOST_FULL_SIZE)_1  -                             

----------------Focused Condition View-------------------
Line       124 Item    1  (this.actual_size == this.EMPTY_SIZE)
Condition totals: 1 of 1 input term covered = 100.00%

                             Input Term   Covered  Reason for no coverage   Hint
                            -----------  --------  -----------------------  --------------
  (this.actual_size == this.EMPTY_SIZE)         Y

     Rows:       Hits  FEC Target                               Non-masking condition(s)      
 ---------  ---------  --------------------                     -------------------------     
  Row   1:          1  (this.actual_size == this.EMPTY_SIZE)_0  -                             
  Row   2:          1  (this.actual_size == this.EMPTY_SIZE)_1  -                             

----------------Focused Condition View-------------------
Line       127 Item    1  (this.actual_size == this.ALMOST_EMPTY_SIZE)
Condition totals: 1 of 1 input term covered = 100.00%

                                    Input Term   Covered  Reason for no coverage   Hint
                                   -----------  --------  -----------------------  --------------
  (this.actual_size == this.ALMOST_EMPTY_SIZE)         Y

     Rows:       Hits  FEC Target                                      Non-masking condition(s)      
 ---------  ---------  --------------------                            -------------------------     
  Row   1:          1  (this.actual_size == this.ALMOST_EMPTY_SIZE)_0  -                             
  Row   2:          1  (this.actual_size == this.ALMOST_EMPTY_SIZE)_1  -                             


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      63        57         6    90.47%

================================Statement Details================================

Statement Coverage for instance /fifo_scoreboard_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File fifo_scoreboard_pkg.sv
    1                                                package fifo_scoreboard_pkg ;
    2                                                    import shared_pkg::*;
    3                                                    import fifo_seq_item_pkg::*;
    4                                                    import uvm_pkg::*;
    5                                                    `include "uvm_macros.svh"
    6                                                    class fifo_scoreboard extends uvm_scoreboard ;
    7               1                    ***0***             `uvm_component_utils(fifo_scoreboard)
    7               2                    ***0***     
    7               3                          2     
    8                                                        uvm_analysis_export #(fifo_seq_item) sb_export ;
    9                                                        uvm_tlm_analysis_fifo #(fifo_seq_item) sb_fifo ;
    10                                                       fifo_seq_item seq_item_sb ;
    11                                                       
    12              1                          1             const int FULL_SIZE = FIFO_DEPTH ;
    13              1                          1             const int ALMOST_FULL_SIZE = FIFO_DEPTH-1 ;
    14              1                          1             const int EMPTY_SIZE = 0 ;
    15              1                          1             const int ALMOST_EMPTY_SIZE = 1 ;
    16              1                          1             int actual_size = 0 ; // the actual size of the fifo after reading and writing 
    17                                               
    18                                                       logic[FIFO_WIDTH-1:0] fifo_ref [$] ;
    19                                                       logic[FIFO_WIDTH-1:0] data_out_ref; 
    20                                                       logic wr_ack_ref, overflow_ref ;
    21                                                       logic full_ref, empty_ref, almostfull_ref, almostempty_ref, underflow_ref;
    22                                               
    23                                                       function new(string name = "fifo_scoreboard" , uvm_component parent = null);
    24              1                          1                 super.new(name,parent); 
    25                                                       endfunction //new()
    26                                               
    27                                                       function void build_phase (uvm_phase phase);
    28              1                          1             super.build_phase(phase);
    29              1                          1             sb_export = new("sb_export" , this) ;
    30              1                          1             sb_fifo = new("sb_fifo" , this) ;
    31                                                       endfunction
    32                                               
    33                                                       function void connect_phase(uvm_phase phase); 
    34              1                          1                 super.connect_phase(phase);
    35              1                          1                 sb_export.connect(sb_fifo.analysis_export) ;
    36                                                       endfunction
    37                                               
    38                                                       task run_phase(uvm_phase phase);
    39              1                          1                 super.run_phase(phase);
    40              1                          1                 forever begin
    41              1                       1602                     sb_fifo.get(seq_item_sb) ;
    42              1                       1601                     reference_model(seq_item_sb) ;
    43                                                               if (seq_item_sb.data_out != data_out_ref) begin
    44              1                    ***0***                         $display("ERROR data_out_observed  = 0h%0h , data_out_expected = 0h%0h ", seq_item_sb.data_out , data_out_ref);
    45              1                    ***0***                         error_count++ ;
    46                                                               end
    47                                                               else begin
    48              1                       1601                         correct_count++ ; 
    49                                                               end
    50                                                              
    51                                                               // extra part checking other outputs 
    52                                                               if (seq_item_sb.full != full_ref || seq_item_sb.almostfull != almostfull_ref || seq_item_sb.empty != empty_ref 
    53                                                               || seq_item_sb.almostempty != almostempty_ref || seq_item_sb.wr_ack != wr_ack_ref || seq_item_sb.overflow != overflow_ref
    54                                                               || seq_item_sb.underflow != underflow_ref ) begin
    55              1                    ***0***                     $display ("Error in flags ") ;
    56              1                    ***0***                     error_count++ ;
    57                                                               end
    58                                                           end 
    59                                                       endtask
    60                                               
    61                                                       task reference_model(fifo_seq_item seq_item_check );
    62                                                       
    63                                                               if (!seq_item_check.rst_n) begin
    64              1                         15                         fifo_ref.delete(); 
    65              1                         15                         overflow_ref = 0 ; underflow_ref = 0 ; 
    65              2                         15     
    66              1                         15                         actual_size = 0 ; wr_ack_ref = 0 ;     
    66              2                         15     
    67                                                               end
    68                                                               else begin
    69                                                                   // seting default values for sequential outputs except data_out to be assigned with it until no condition change it 
    70              1                       1586                         overflow_ref = 0 ; underflow_ref = 0 ; 
    70              2                       1586     
    71                                                                   // push and pop data from the fifo 
    72                                                                   case ({seq_item_check.wr_en , seq_item_check.rd_en})
    73                                                                       2'b11: begin // write and read 
    74                                                                           if(actual_size != FULL_SIZE && actual_size != EMPTY_SIZE) begin
    75              1                        277                                     fifo_ref.push_back(seq_item_check.data_in) ;
    76              1                        277                                     data_out_ref = fifo_ref.pop_front() ;
    77              1                        277                                     wr_ack_ref = 1 ;
    78                                                                           end 
    79                                                                           else if (actual_size == FULL_SIZE) begin
    80              1                         51                                     data_out_ref = fifo_ref.pop_front();
    81              1                         51                                     actual_size = actual_size - 1 ;
    82              1                         51                                     wr_ack_ref = 0 ; 
    83                                                                           end   
    84                                                                           else if (actual_size == EMPTY_SIZE) begin
    85              1                         85                                     fifo_ref.push_back(seq_item_check.data_in) ;
    86              1                         85                                     actual_size = actual_size+1 ; 
    87              1                         85                                     wr_ack_ref = 1 ; 
    88                                                                           end
    89                                                                       end
    90                                                                       2'b10 : begin // write only 
    91                                                                           if(actual_size != FULL_SIZE) begin
    92              1                        335                                     fifo_ref.push_back (seq_item_check.data_in);
    93              1                        335                                     actual_size = actual_size + 1 ;
    94              1                        335                                     wr_ack_ref = 1 ; 
    95                                                                           end
    96                                                                           else begin
    97              1                        144                                     overflow_ref = 1 ; wr_ack_ref =  0 ; 
    97              2                        144     
    98                                                                           end
    99                                                                       end
    100                                                                      2'b01 : begin // read only 
    101                                                                          if(actual_size != EMPTY_SIZE) begin
    102             1                        299                                     data_out_ref = fifo_ref.pop_front() ; 
    103             1                        299                                     actual_size = actual_size - 1 ; 
    104             1                        299                                     wr_ack_ref = 0 ;
    105                                                                          end 
    106                                                                          else begin
    107             1                        110                                     underflow_ref = 1 ;
    108             1                        110                                     wr_ack_ref = 0 ;
    109                                                                          end 
    110                                                                      end 
    111                                                                      2'b00 : begin
    112             1                        285                                 wr_ack_ref = 0 ; overflow_ref = 0 ; underflow_ref = 0; 
    112             2                        285     
    112             3                        285     
    113                                                                      end    
    114                                                                  endcase  
    115                                                              end 
    116             1                       1601                         almostempty_ref = 0 ; empty_ref = 0 ;
    116             2                       1601     
    117             1                       1601                         almostfull_ref = 0 ; full_ref = 0 ;
    117             2                       1601     
    118                                                                  if (actual_size == FULL_SIZE) begin
    119             1                        265                             full_ref = 1 ;  
    120                                                                  end
    121                                                                  else if (actual_size == ALMOST_FULL_SIZE) begin
    122             1                        150                             almostfull_ref = 1 ;
    123                                                                  end
    124                                                                  else if (actual_size == EMPTY_SIZE) begin
    125             1                        287                             empty_ref = 1 ; 
    126                                                                  end
    127                                                                  else if (actual_size == ALMOST_EMPTY_SIZE) begin
    128             1                        387                             almostempty_ref = 1 ;  
    129                                                                  end
    130                                                      endtask
    131                                              
    132                                                      function void report_phase(uvm_phase phase);
    133             1                          1                 super.report_phase(phase);
    134             1                          1                 `uvm_info("report_phase", $sformatf("Total successful transactions: %0d", correct_count), UVM_MEDIUM);
    135             1                          1                 `uvm_info("report_phase", $sformatf("Total failed transactions: %0d", error_count), UVM_MEDIUM);


=================================================================================
=== Instance: /fifo_config_obj_pkg
=== Design Unit: work.fifo_config_obj_pkg
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                        10         0        10     0.00%

================================Branch Details================================

Branch Coverage for instance /fifo_config_obj_pkg

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File fifo_config_obj_pkg.sv
------------------------------------IF Branch------------------------------------
    5                                    ***0***     Count coming in to IF
    5               1                    ***0***     `uvm_object_utils (fifo_config_obj)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    5                                    ***0***     Count coming in to IF
    5               2                    ***0***     `uvm_object_utils (fifo_config_obj)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    5                                    ***0***     Count coming in to IF
    5               3                    ***0***     `uvm_object_utils (fifo_config_obj)
    5               4                    ***0***     `uvm_object_utils (fifo_config_obj)
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    5                                    ***0***     Count coming in to IF
    5               5                    ***0***     `uvm_object_utils (fifo_config_obj)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    5                                    ***0***     Count coming in to IF
    5               6                    ***0***     `uvm_object_utils (fifo_config_obj)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%


Condition Coverage:
    Enabled Coverage              Bins   Covered    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Conditions                       2         0         2     0.00%

================================Condition Details================================

Condition Coverage for instance /fifo_config_obj_pkg --

  File fifo_config_obj_pkg.sv
----------------Focused Condition View-------------------
Line       5 Item    1  (name != 0)
Condition totals: 0 of 1 input term covered = 0.00%

   Input Term   Covered  Reason for no coverage   Hint
  -----------  --------  -----------------------  --------------
  (name != 0)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:    ***0***  (name != 0)_0         -                             
  Row   2:    ***0***  (name != 0)_1         -                             

----------------Focused Condition View-------------------
Line       5 Item    2  (tmp_data__ != null)
Condition totals: 0 of 1 input term covered = 0.00%

            Input Term   Covered  Reason for no coverage   Hint
           -----------  --------  -----------------------  --------------
  (tmp_data__ != null)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target              Non-masking condition(s)      
 ---------  ---------  --------------------    -------------------------     
  Row   1:    ***0***  (tmp_data__ != null)_0  -                             
  Row   2:    ***0***  (tmp_data__ != null)_1  -                             


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      11         1        10     9.09%

================================Statement Details================================

Statement Coverage for instance /fifo_config_obj_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File fifo_config_obj_pkg.sv
    1                                                package fifo_config_obj_pkg ;
    2                                                import uvm_pkg::*;
    3                                                `include "uvm_macros.svh"
    4                                                class fifo_config_obj extends uvm_object ;
    5               1                    ***0***     `uvm_object_utils (fifo_config_obj)
    5               2                    ***0***     
    5               3                    ***0***     
    5               4                    ***0***     
    5               5                    ***0***     
    5               6                    ***0***     
    5               7                    ***0***     
    5               8                    ***0***     
    5               9                    ***0***     
    5              10                    ***0***     
    6                                                virtual FIFO_interface fifo_vif ;
    7                                                    function new(string name = "fifo_config_obj");
    8               1                          1             super.new(name);


=================================================================================
=== Instance: /fifo_monitor_pkg
=== Design Unit: work.fifo_monitor_pkg
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                         2         1         1    50.00%

================================Branch Details================================

Branch Coverage for instance /fifo_monitor_pkg

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File fifo_monitor_pkg.sv
------------------------------------IF Branch------------------------------------
    38                                      1601     Count coming in to IF
    38              1                    ***0***                 `uvm_info ("run_phase", seq_item.convert2string(),UVM_HIGH)
                                            1601     All False Count
Branch totals: 1 hit of 2 branches = 50.00%


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      24        21         3    87.50%

================================Statement Details================================

Statement Coverage for instance /fifo_monitor_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File fifo_monitor_pkg.sv
    1                                                package fifo_monitor_pkg ;
    2                                                import uvm_pkg::*;
    3                                                import fifo_seq_item_pkg::*;
    4                                                `include "uvm_macros.svh"
    5                                                class fifo_monitor extends uvm_monitor;
    6               1                    ***0***     `uvm_component_utils(fifo_monitor) 
    6               2                    ***0***     
    6               3                          2     
    7                                                virtual FIFO_interface fifo_vif ;
    8                                                fifo_seq_item seq_item;  
    9                                                uvm_analysis_port #(fifo_seq_item) mon_ap ; // monitor analysis port 
    10                                                   function new(string name = "fifo_monitor" , uvm_component parent = null );
    11              1                          1             super.new(name,parent) ;   
    12                                                   endfunction //new()
    13                                               
    14                                                   function void build_phase(uvm_phase phase);
    15              1                          1         super.build_phase(phase);
    16              1                          1         mon_ap = new("mon_ap",this);
    17                                                   endfunction : build_phase
    18                                               
    19                                                   task  run_phase(uvm_phase phase );
    20              1                          1             super.run_phase(phase) ;
    21              1                          1             forever begin
    22              1                       1602                 seq_item = fifo_seq_item :: type_id :: create("seq_item") ;
    23              1                       1602                 @(negedge fifo_vif.clk);
    24              1                       1601                 seq_item.data_in     = fifo_vif.data_in;
    25              1                       1601                 seq_item.rst_n       = fifo_vif.rst_n;
    26              1                       1601                 seq_item.wr_en       = fifo_vif.wr_en;
    27              1                       1601                 seq_item.rd_en       = fifo_vif.rd_en;
    28              1                       1601                 seq_item.wr_ack      = fifo_vif.wr_ack;
    29              1                       1601                 seq_item.overflow    = fifo_vif.overflow;
    30              1                       1601                 seq_item.underflow   = fifo_vif.underflow; 
    31              1                       1601                 seq_item.full        = fifo_vif.full;
    32              1                       1601                 seq_item.empty       = fifo_vif.empty;
    33              1                       1601                 seq_item.almostfull  = fifo_vif.almostfull;
    34              1                       1601                 seq_item.almostempty = fifo_vif.almostempty;
    35              1                       1601                 seq_item.data_out    = fifo_vif.data_out;
    36                                               
    37              1                       1601                 mon_ap.write(seq_item) ;
    38              1                    ***0***                 `uvm_info ("run_phase", seq_item.convert2string(),UVM_HIGH)


=================================================================================
=== Instance: /fifo_driver_pkg
=== Design Unit: work.fifo_driver_pkg
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                         2         1         1    50.00%

================================Branch Details================================

Branch Coverage for instance /fifo_driver_pkg

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File fifo_driver_pkg.sv
------------------------------------IF Branch------------------------------------
    24                                      1601     Count coming in to IF
    24              1                    ***0***             `uvm_info("run_phase" , seq_item.convert2string_stimulus() , UVM_HIGH)
                                            1601     All False Count
Branch totals: 1 hit of 2 branches = 50.00%


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      15        12         3    80.00%

================================Statement Details================================

Statement Coverage for instance /fifo_driver_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File fifo_driver_pkg.sv
    1                                                package fifo_driver_pkg ;
    2                                                import fifo_seq_item_pkg::*;
    3                                                import uvm_pkg::*;
    4                                                `include "uvm_macros.svh"
    5                                                class fifo_driver extends uvm_driver #(fifo_seq_item);
    6               1                    ***0***     `uvm_component_utils(fifo_driver) 
    6               2                    ***0***     
    6               3                          2     
    7                                                virtual FIFO_interface fifo_vif ;
    8                                                fifo_seq_item seq_item ;
    9                                                    function new(string name = "fifo_driver" , uvm_component parent = null);
    10              1                          1             super.new(name,parent);     
    11                                                   endfunction //new()
    12                                               task  run_phase (uvm_phase phase );
    13              1                          1         super.run_phase(phase) ;
    14                                               
    15              1                          1         forever begin
    16              1                       1602             seq_item = fifo_seq_item :: type_id :: create ("seq_item");
    17              1                       1602             seq_item_port.get_next_item(seq_item);
    18              1                       1601             fifo_vif.data_in = seq_item.data_in ;
    19              1                       1601             fifo_vif.rst_n   = seq_item.rst_n ;
    20              1                       1601             fifo_vif.wr_en   = seq_item.wr_en ;
    21              1                       1601             fifo_vif.rd_en   = seq_item.rd_en ;
    22              1                       1601             @(negedge fifo_vif.clk);
    23              1                       1601             seq_item_port.item_done() ; 
    24              1                    ***0***             `uvm_info("run_phase" , seq_item.convert2string_stimulus() , UVM_HIGH)


=================================================================================
=== Instance: /my_sequencer_pkg
=== Design Unit: work.my_sequencer_pkg
=================================================================================
Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                       4         2         2    50.00%

================================Statement Details================================

Statement Coverage for instance /my_sequencer_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File my_sequencer_pkg.sv
    1                                                package my_sequencer_pkg ;
    2                                                import fifo_seq_item_pkg::*;
    3                                                import uvm_pkg::*;
    4                                                `include "uvm_macros.svh"
    5                                                class my_sequencer extends uvm_sequencer #(fifo_seq_item);
    6               1                    ***0***     `uvm_component_utils(my_sequencer) 
    6               2                    ***0***     
    6               3                          2     
    7                                                    function new(string name = "my_sequencer" , uvm_component parent = null);
    8               1                          1             super.new(name,parent) ;


=================================================================================
=== Instance: /fifo_agent_pkg
=== Design Unit: work.fifo_agent_pkg
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                         4         1         3    25.00%

================================Branch Details================================

Branch Coverage for instance /fifo_agent_pkg

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File fifo_agent_pkg.sv
------------------------------------IF Branch------------------------------------
    24                                         1     Count coming in to IF
    24              1                    ***0***             if(!uvm_config_db #(fifo_config_obj) :: get (this, "" ,"FIFOVIF", cfg_obj)) 
                                               1     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    25                                   ***0***     Count coming in to IF
    25              1                    ***0***             `uvm_fatal("build phase" , "Agent - unable to get configration object ")
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      14        11         3    78.57%

================================Statement Details================================

Statement Coverage for instance /fifo_agent_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File fifo_agent_pkg.sv
    1                                                package fifo_agent_pkg ;
    2                                                import fifo_seq_item_pkg::*;
    3                                                import my_sequencer_pkg::*; 
    4                                                import fifo_driver_pkg::*;
    5                                                import fifo_monitor_pkg::*;
    6                                                import fifo_config_obj_pkg::*;
    7                                                import uvm_pkg::*;
    8                                                `include "uvm_macros.svh"
    9                                                class fifo_agent extends uvm_agent ;
    10              1                    ***0***     `uvm_component_utils (fifo_agent)
    10              2                    ***0***     
    10              3                          2     
    11                                               
    12                                               my_sequencer sqr ;
    13                                               fifo_driver driver ; 
    14                                               fifo_monitor monitor ;
    15                                               fifo_config_obj cfg_obj ;
    16                                               uvm_analysis_port #(fifo_seq_item) agt_ap ; 
    17                                               
    18                                                   function new(string name = "fifo_agent" , uvm_component parent = null);
    19              1                          1             super.new(name,parent); 
    20                                                   endfunction //new()
    21                                               
    22                                                   function void build_phase(uvm_phase phase);
    23              1                          1             super.build_phase(phase);
    24                                                       if(!uvm_config_db #(fifo_config_obj) :: get (this, "" ,"FIFOVIF", cfg_obj)) 
    25              1                    ***0***             `uvm_fatal("build phase" , "Agent - unable to get configration object ")
    26              1                          1             driver = fifo_driver :: type_id :: create ("driver", this);
    27              1                          1             sqr = my_sequencer :: type_id :: create("sqr",this) ;
    28              1                          1             monitor = fifo_monitor :: type_id :: create ("monitor", this) ; 
    29              1                          1             agt_ap = new("agt_ap" ,this) ;  
    30                                                   endfunction
    31                                               
    32                                                   function void connect_phase(uvm_phase phase );
    33              1                          1             driver.fifo_vif  = cfg_obj.fifo_vif;
    34              1                          1             monitor.fifo_vif = cfg_obj.fifo_vif;
    35              1                          1             driver.seq_item_port.connect(sqr.seq_item_export);
    36              1                          1             monitor.mon_ap.connect(agt_ap);


=================================================================================
=== Instance: /fifo_env_pkg
=== Design Unit: work.fifo_env_pkg
=================================================================================
Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      11         9         2    81.81%

================================Statement Details================================

Statement Coverage for instance /fifo_env_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File fifo_env_pkg.sv
    1                                                package fifo_env_pkg;
    2                                                import fifo_agent_pkg::*;
    3                                                import fifo_scoreboard_pkg::*;
    4                                                import fifo_coverage_pkg::*;
    5                                                import uvm_pkg::*;
    6                                                `include "uvm_macros.svh"
    7                                                
    8                                                class fifo_env extends uvm_env;
    9               1                    ***0***     `uvm_component_utils (fifo_env)
    9               2                    ***0***     
    9               3                          2     
    10                                               fifo_agent agent ; 
    11                                               fifo_scoreboard sb ;
    12                                               fifo_coverage cov ;
    13                                                   function new(string name = "fifo_env" , uvm_component parent = null );
    14              1                          1             super.new(name,parent);     
    15                                                   endfunction 
    16                                               
    17                                                   function void build_phase (uvm_phase phase);
    18              1                          1             super.build_phase(phase);
    19              1                          1             agent = fifo_agent :: type_id :: create ("agent",this);
    20              1                          1             sb = fifo_scoreboard :: type_id :: create ("sb",this);
    21              1                          1             cov = fifo_coverage :: type_id :: create ("cov",this);
    22                                                   endfunction : build_phase
    23                                               
    24                                                   function void connect_phase (uvm_phase phase);
    25              1                          1         super.connect_phase(phase);
    26              1                          1         agent.agt_ap.connect(sb.sb_export) ;
    27              1                          1         agent.agt_ap.connect(cov.cov_export) ;


=================================================================================
=== Instance: /fifo_test_pkg
=== Design Unit: work.fifo_test_pkg
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                        20         9        11    45.00%

================================Branch Details================================

Branch Coverage for instance /fifo_test_pkg

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File fifo_test_pkg.sv
------------------------------------IF Branch------------------------------------
    31                                         1     Count coming in to IF
    31              1                    ***0***             if(!uvm_config_db # (virtual FIFO_interface) :: get (this ,"","FIFO",cfg_obj_test.fifo_vif )) begin
                                               1     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    32                                   ***0***     Count coming in to IF
    32              1                    ***0***                 `uvm_fatal ("build_phase" , "TEST unable to get the virtual interface of the FIFO form configration data base ") ;
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    41                                         1     Count coming in to IF
    41              1                          1             `uvm_info ("run_phase" , "Reseting Started ",UVM_LOW)
                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    43                                         1     Count coming in to IF
    43              1                          1             `uvm_info ("run_phase" , "Reseting  Ended ",UVM_LOW)
                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    46                                         1     Count coming in to IF
    46              1                          1              `uvm_info ("run_phase" , "Writing only Started ",UVM_LOW)
                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    48                                         1     Count coming in to IF
    48              1                          1             `uvm_info ("run_phase" , "Writing only Ended ",UVM_LOW)
                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    51                                         1     Count coming in to IF
    51              1                          1             `uvm_info ("run_phase" , "Reading only Started ",UVM_LOW)
                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    53                                         1     Count coming in to IF
    53              1                          1             `uvm_info ("run_phase" , "Reading only Ended ",UVM_LOW) 
                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    56                                         1     Count coming in to IF
    56              1                          1             `uvm_info ("run_phase" , "Writing and Reading Started ",UVM_LOW)
                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    58                                         1     Count coming in to IF
    58              1                          1             `uvm_info ("run_phase" , "Writing and Reading Ended ",UVM_LOW)
                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      28        25         3    89.28%

================================Statement Details================================

Statement Coverage for instance /fifo_test_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File fifo_test_pkg.sv
    1                                                package fifo_test_pkg  ;
    2                                                import fifo_env_pkg::*;
    3                                                import fifo_reset_seq_pkg::*;
    4                                                import fifo_write_only_seq_pkg::*;
    5                                                import fifo_read_only_seq_pkg::*;
    6                                                import fifo_write_read_seq_pkg::*;
    7                                                import fifo_config_obj_pkg::*;
    8                                                import uvm_pkg::*;
    9                                                `include "uvm_macros.svh"
    10                                               
    11                                               class fifo_test extends uvm_test;
    12              1                    ***0***     `uvm_component_utils(fifo_test)
    12              2                    ***0***     
    12              3                          4     
    13                                               fifo_env env ;
    14                                               fifo_reset_seq rst_seq ;
    15                                               fifo_write_only_seq wr_seq ;
    16                                               fifo_read_only_seq rd_seq ;
    17                                               fifo_write_read_seq wr_rd_seq ;
    18                                               fifo_config_obj cfg_obj_test ;
    19                                                   function new(string name = "fifo_test" , uvm_component parent = null);
    20              1                          1             super.new(name,parent);    
    21                                                   endfunction //new()
    22                                                   function void build_phase (uvm_phase phase);
    23              1                          1             super.build_phase(phase);
    24              1                          1             env = fifo_env :: type_id :: create ("env" , this) ; // this refere to this test class which is the parent for env
    25              1                          1             cfg_obj_test = fifo_config_obj :: type_id :: create ("cfg_obj_test") ;
    26              1                          1             rst_seq = fifo_reset_seq :: type_id :: create ("rst_seq") ;
    27              1                          1             wr_seq = fifo_write_only_seq :: type_id :: create ("wr_seq") ;
    28              1                          1             rd_seq = fifo_read_only_seq :: type_id :: create ("rd_seq") ;
    29              1                          1             wr_rd_seq = fifo_write_read_seq :: type_id :: create ("wr_rd_seq") ;
    30                                               
    31                                                       if(!uvm_config_db # (virtual FIFO_interface) :: get (this ,"","FIFO",cfg_obj_test.fifo_vif )) begin
    32              1                    ***0***                 `uvm_fatal ("build_phase" , "TEST unable to get the virtual interface of the FIFO form configration data base ") ;
    33                                                       end
    34              1                          1             uvm_config_db # (fifo_config_obj) :: set (this ,"*","FIFOVIF",cfg_obj_test ) ;
    35                                                   endfunction
    36                                               
    37                                                   task  run_phase(uvm_phase phase);
    38              1                          1             super.run_phase (phase) ;
    39              1                          1             phase.raise_objection (this) ;
    40                                                       // reset sequence 
    41              1                          1             `uvm_info ("run_phase" , "Reseting Started ",UVM_LOW)
    42              1                          1             rst_seq.start(env.agent.sqr) ;
    43              1                          1             `uvm_info ("run_phase" , "Reseting  Ended ",UVM_LOW)
    44                                               
    45                                                       // writing only sequence 
    46              1                          1              `uvm_info ("run_phase" , "Writing only Started ",UVM_LOW)
    47              1                          1             wr_seq.start(env.agent.sqr) ;
    48              1                          1             `uvm_info ("run_phase" , "Writing only Ended ",UVM_LOW)
    49                                               
    50                                                       // Reading only sequence 
    51              1                          1             `uvm_info ("run_phase" , "Reading only Started ",UVM_LOW)
    52              1                          1             rd_seq.start(env.agent.sqr) ;
    53              1                          1             `uvm_info ("run_phase" , "Reading only Ended ",UVM_LOW) 
    54                                               
    55                                                       // Writing and Reading  sequence 
    56              1                          1             `uvm_info ("run_phase" , "Writing and Reading Started ",UVM_LOW)
    57              1                          1             wr_rd_seq.start(env.agent.sqr) ;
    58              1                          1             `uvm_info ("run_phase" , "Writing and Reading Ended ",UVM_LOW)
    59                                                       
    60              1                          1             phase.drop_objection(this) ;


COVERGROUP COVERAGE:
----------------------------------------------------------------------------------------------------------
Covergroup                                             Metric       Goal       Bins    Status               
                                                                                                         
----------------------------------------------------------------------------------------------------------
 TYPE /fifo_coverage_pkg/fifo_coverage/cvr_gp         100.00%        100          -    Covered              
    covered/total bins:                                    66         66          -                      
    missing/total bins:                                     0         66          -                      
    % Hit:                                            100.00%        100          -                      
    Coverpoint Reset                                  100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        bin auto[0]                                        15          1          -    Covered              
        bin auto[1]                                      1586          1          -    Covered              
    Coverpoint Read_EN                                100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        bin auto[0]                                       771          1          -    Covered              
        bin auto[1]                                       830          1          -    Covered              
    Coverpoint Write_EN                               100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        bin auto[0]                                       698          1          -    Covered              
        bin auto[1]                                       903          1          -    Covered              
    Coverpoint Write_acknowledge                      100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        bin auto[0]                                       904          1          -    Covered              
        bin auto[1]                                       697          1          -    Covered              
    Coverpoint Overflow                               100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        bin auto[0]                                      1457          1          -    Covered              
        bin auto[1]                                       144          1          -    Covered              
    Coverpoint FULL                                   100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        bin auto[0]                                      1336          1          -    Covered              
        bin auto[1]                                       265          1          -    Covered              
    Coverpoint EMPTY                                  100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        bin auto[0]                                      1314          1          -    Covered              
        bin auto[1]                                       287          1          -    Covered              
    Coverpoint ALMOSTFULL                             100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        bin auto[0]                                      1451          1          -    Covered              
        bin auto[1]                                       150          1          -    Covered              
    Coverpoint ALMOSTEMPTY                            100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        bin auto[0]                                      1214          1          -    Covered              
        bin auto[1]                                       387          1          -    Covered              
    Coverpoint UNDERFLOW                              100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        bin auto[0]                                      1491          1          -    Covered              
        bin auto[1]                                       110          1          -    Covered              
    Cross Cross_rd_wr_writer_ack                      100.00%        100          -    Covered              
        covered/total bins:                                 6          6          -                      
        missing/total bins:                                 0          6          -                      
        % Hit:                                        100.00%        100          -                      
        Auto, Default and User Defined Bins:
            bin <auto[1],auto[1],auto[1]>                 362          1          -    Covered              
            bin <auto[1],auto[1],auto[0]>                  56          1          -    Covered              
            bin <auto[0],auto[1],auto[1]>                 335          1          -    Covered              
            bin <auto[0],auto[1],auto[0]>                 150          1          -    Covered              
            bin <auto[1],auto[0],auto[0]>                 412          1          -    Covered              
            bin <auto[0],auto[0],auto[0]>                 286          1          -    Covered              
        Illegal and Ignore Bins:
            illegal_bin high_wr_ack_low_write               0                     -    ZERO                 
    Cross Cross_rd_wr_Overflow                        100.00%        100          -    Covered              
        covered/total bins:                                 5          5          -                      
        missing/total bins:                                 0          5          -                      
        % Hit:                                        100.00%        100          -                      
        Auto, Default and User Defined Bins:
            bin <auto[1],auto[1],auto[0]>                 418          1          -    Covered              
            bin <auto[1],auto[0],auto[0]>                 412          1          -    Covered              
            bin <auto[0],auto[1],auto[1]>                 144          1          -    Covered              
            bin <auto[0],auto[1],auto[0]>                 341          1          -    Covered              
            bin <auto[0],auto[0],auto[0]>                 286          1          -    Covered              
        Illegal and Ignore Bins:
            illegal_bin high_rd_full_low_write              0                     -    ZERO                 
            illegal_bin high_overflow_low_write             0                     -    ZERO                 
    Cross Cross_rd_wr_FULL                            100.00%        100          -    Covered              
        covered/total bins:                                 6          6          -                      
        missing/total bins:                                 0          6          -                      
        % Hit:                                        100.00%        100          -                      
        Auto, Default and User Defined Bins:
            bin <auto[0],auto[1],auto[1]>                 221          1          -    Covered              
            bin <auto[0],auto[0],auto[1]>                  44          1          -    Covered              
            bin <auto[1],auto[1],auto[0]>                 418          1          -    Covered              
            bin <auto[1],auto[0],auto[0]>                 412          1          -    Covered              
            bin <auto[0],auto[1],auto[0]>                 264          1          -    Covered              
            bin <auto[0],auto[0],auto[0]>                 242          1          -    Covered              
        Illegal and Ignore Bins:
            illegal_bin high_rd_full_low_write              0                     -    ZERO                 
            illegal_bin all_high                            0                     -    ZERO                 
    Cross Cross_rd_wr_EMPTY                           100.00%        100          -    Covered              
        covered/total bins:                                 8          8          -                      
        missing/total bins:                                 0          8          -                      
        % Hit:                                        100.00%        100          -                      
        Auto, Default and User Defined Bins:
            bin <auto[1],auto[1],auto[1]>                   5          1          -    Covered              
            bin <auto[0],auto[1],auto[1]>                   6          1          -    Covered              
            bin <auto[1],auto[0],auto[1]>                 235          1          -    Covered              
            bin <auto[0],auto[0],auto[1]>                  41          1          -    Covered              
            bin <auto[1],auto[1],auto[0]>                 413          1          -    Covered              
            bin <auto[0],auto[1],auto[0]>                 479          1          -    Covered              
            bin <auto[1],auto[0],auto[0]>                 177          1          -    Covered              
            bin <auto[0],auto[0],auto[0]>                 245          1          -    Covered              
    Cross Cross_rd_wr_ALMOSTFULL                      100.00%        100          -    Covered              
        covered/total bins:                                 8          8          -                      
        missing/total bins:                                 0          8          -                      
        % Hit:                                        100.00%        100          -                      
        Auto, Default and User Defined Bins:
            bin <auto[1],auto[1],auto[1]>                  83          1          -    Covered              
            bin <auto[0],auto[1],auto[1]>                  21          1          -    Covered              
            bin <auto[1],auto[0],auto[1]>                  20          1          -    Covered              
            bin <auto[0],auto[0],auto[1]>                  26          1          -    Covered              
            bin <auto[1],auto[1],auto[0]>                 335          1          -    Covered              
            bin <auto[0],auto[1],auto[0]>                 464          1          -    Covered              
            bin <auto[1],auto[0],auto[0]>                 392          1          -    Covered              
            bin <auto[0],auto[0],auto[0]>                 260          1          -    Covered              
    Cross Cross_rd_wr_ALMOSTEMPTY                     100.00%        100          -    Covered              
        covered/total bins:                                 8          8          -                      
        missing/total bins:                                 0          8          -                      
        % Hit:                                        100.00%        100          -                      
        Auto, Default and User Defined Bins:
            bin <auto[1],auto[1],auto[1]>                 208          1          -    Covered              
            bin <auto[0],auto[1],auto[1]>                  50          1          -    Covered              
            bin <auto[1],auto[0],auto[1]>                  59          1          -    Covered              
            bin <auto[0],auto[0],auto[1]>                  70          1          -    Covered              
            bin <auto[1],auto[1],auto[0]>                 210          1          -    Covered              
            bin <auto[0],auto[1],auto[0]>                 435          1          -    Covered              
            bin <auto[1],auto[0],auto[0]>                 353          1          -    Covered              
            bin <auto[0],auto[0],auto[0]>                 216          1          -    Covered              
    Cross Cross_rd_wr_UNDERFLOW                       100.00%        100          -    Covered              
        covered/total bins:                                 5          5          -                      
        missing/total bins:                                 0          5          -                      
        % Hit:                                        100.00%        100          -                      
        Auto, Default and User Defined Bins:
            bin <auto[1],auto[1],auto[0]>                 418          1          -    Covered              
            bin <auto[0],auto[1],auto[0]>                 485          1          -    Covered              
            bin <auto[1],auto[0],auto[1]>                 110          1          -    Covered              
            bin <auto[1],auto[0],auto[0]>                 302          1          -    Covered              
            bin <auto[0],auto[0],auto[0]>                 286          1          -    Covered              
        Illegal and Ignore Bins:
            illegal_bin high_rd_full_low_write              0                     -    ZERO                 
            illegal_bin high_underflow_low_read             0                     -    ZERO                 

TOTAL COVERGROUP COVERAGE: 100.00%  COVERGROUP TYPES: 1

DIRECTIVE COVERAGE:
--------------------------------------------------------------------------------------------
Name                                     Design Design   Lang File(Line)      Hits Status    
                                         Unit   UnitType                                     
--------------------------------------------------------------------------------------------
/FIFO_TOP/dut/fifo_assertions_block/Write_pointer_cover 
                                         fifo_assertions Verilog  SVA  fifo_assertions.sv(119)
                                                                               692 Covered   
/FIFO_TOP/dut/fifo_assertions_block/Read_pointer_cover 
                                         fifo_assertions Verilog  SVA  fifo_assertions.sv(120)
                                                                               623 Covered   
/FIFO_TOP/dut/fifo_assertions_block/Counter_up_cover 
                                         fifo_assertions Verilog  SVA  fifo_assertions.sv(121)
                                                                               417 Covered   
/FIFO_TOP/dut/fifo_assertions_block/Counter_down_cover 
                                         fifo_assertions Verilog  SVA  fifo_assertions.sv(122)
                                                                               348 Covered   
/FIFO_TOP/dut/fifo_assertions_block/Write_acknowledge_cover 
                                         fifo_assertions Verilog  SVA  fifo_assertions.sv(123)
                                                                               692 Covered   
/FIFO_TOP/dut/fifo_assertions_block/High_overflow_cover 
                                         fifo_assertions Verilog  SVA  fifo_assertions.sv(124)
                                                                               140 Covered   
/FIFO_TOP/dut/fifo_assertions_block/Low_overflow_cover 
                                         fifo_assertions Verilog  SVA  fifo_assertions.sv(125)
                                                                              1431 Covered   
/FIFO_TOP/dut/fifo_assertions_block/High_underflow_cover 
                                         fifo_assertions Verilog  SVA  fifo_assertions.sv(126)
                                                                               109 Covered   
/FIFO_TOP/dut/fifo_assertions_block/Low_underflow_cover 
                                         fifo_assertions Verilog  SVA  fifo_assertions.sv(127)
                                                                              1462 Covered   

TOTAL DIRECTIVE COVERAGE: 100.00%  COVERS: 9

ASSERTION RESULTS:
--------------------------------------------------------------------------------------------------------------------------------
Name                 File(Line)                   Failure      Pass     Vacuous    Disable    Attempt     Active Peak Active ATV
                                                  Count        Count    Count      Count      Count       Count  Count          
--------------------------------------------------------------------------------------------------------------------------------
/FIFO_TOP/dut/fifo_assertions_block/FULL
                     fifo_assertions.sv(7)              0          1          0          0          1          0           - off
/FIFO_TOP/dut/fifo_assertions_block/NOT_FULL
                     fifo_assertions.sv(9)              0          1          0          0          1          0           - off
/FIFO_TOP/dut/fifo_assertions_block/ALMOSTFULL
                     fifo_assertions.sv(13)             0          1          0          0          1          0           - off
/FIFO_TOP/dut/fifo_assertions_block/NOT_ALMOSTFULL
                     fifo_assertions.sv(15)             0          1          0          0          1          0           - off
/FIFO_TOP/dut/fifo_assertions_block/EMPTY
                     fifo_assertions.sv(19)             0          1          0          0          1          0           - off
/FIFO_TOP/dut/fifo_assertions_block/NOT_EMPTY
                     fifo_assertions.sv(21)             0          1          0          0          1          0           - off
/FIFO_TOP/dut/fifo_assertions_block/ALMOSTEMPTY
                     fifo_assertions.sv(25)             0          1          0          0          1          0           - off
/FIFO_TOP/dut/fifo_assertions_block/NOT_ALMOSTEMPTY
                     fifo_assertions.sv(27)             0          1          0          0          1          0           - off
/FIFO_TOP/dut/fifo_assertions_block/assert_reset
                     fifo_assertions.sv(32)             0          1          0          0          1          0           - off
/FIFO_TOP/dut/fifo_assertions_block/Write_pointer
                     fifo_assertions.sv(108)            0        692        889         19       1601          1           - off
/FIFO_TOP/dut/fifo_assertions_block/Read_pointer
                     fifo_assertions.sv(109)            0        623        959         19       1601          0           - off
/FIFO_TOP/dut/fifo_assertions_block/Counter_up
                     fifo_assertions.sv(110)            0        417       1166         17       1601          1           - off
/FIFO_TOP/dut/fifo_assertions_block/Counter_down
                     fifo_assertions.sv(111)            0        348       1236         17       1601          0           - off
/FIFO_TOP/dut/fifo_assertions_block/Write_acknowledge
                     fifo_assertions.sv(112)            0        692        889         19       1601          1           - off
/FIFO_TOP/dut/fifo_assertions_block/High_overflow
                     fifo_assertions.sv(113)            0        140       1442         19       1601          0           - off
/FIFO_TOP/dut/fifo_assertions_block/Low_overflow
                     fifo_assertions.sv(114)            0       1431        144         25       1601          1           - off
/FIFO_TOP/dut/fifo_assertions_block/High_underflow
                     fifo_assertions.sv(115)            0        109       1476         16       1601          0           - off
/FIFO_TOP/dut/fifo_assertions_block/Low_underflow
                     fifo_assertions.sv(116)            0       1462        110         28       1601          1           - off
/fifo_write_read_seq_pkg/fifo_write_read_seq/body/#ublk#164226423#18/immed__23
                     fifo_write_read_seq_pkg.sv(23)
                                                        0        500          0          0        500          0           - off
/fifo_write_read_seq_pkg/fifo_write_read_seq/body/#ublk#164226423#29/immed__34
                     fifo_write_read_seq_pkg.sv(34)
                                                        0        500          0          0        500          0           - off
/fifo_write_read_seq_pkg/fifo_write_read_seq/body/#ublk#164226423#40/immed__45
                     fifo_write_read_seq_pkg.sv(45)
                                                        0        500          0          0        500          0           - off
/fifo_read_only_seq_pkg/fifo_read_only_seq/body/#ublk#143532583#14/immed__19
                     fifo_read_only_seq_pkg.sv(19)
                                                        0         50          0          0         50          0           - off
/fifo_write_only_seq_pkg/fifo_write_only_seq/body/#ublk#220570231#14/immed__19
                     fifo_write_only_seq_pkg.sv(19)
                                                        0         50          0          0         50          0           - off
/fifo_reset_seq_pkg/fifo_reset_seq/body/immed__15
                     fifo_reset_seq_pkg.sv(15)          0          1          0          0          1          0           - off

Total Coverage By Instance (filtered view): 84.33%

